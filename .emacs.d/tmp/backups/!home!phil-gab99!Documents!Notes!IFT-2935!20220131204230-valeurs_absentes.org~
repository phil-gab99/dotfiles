:PROPERTIES:
:ID:       551669d5-21fd-4f52-902d-22655582ff22
:END:
#+title: ift2935-valeurs-absentes
#+STARTUP: latexpreview inlineimages
#+date: [2022-01-31 Mon 20:42]

* Valeurs absentes

- À moins qu’un attribut soit déclaré comme faisant partie d’une clé ou avec la contrainte ~not NULL~, sa valeur peut être absente
- Dans ce cas, il est ~NULL~ dans SQL
- Quand ~NULL~ est utilisé dans une comparaison (égalité, inégalité), le résultat est ~UNKNOWN~
- On a alors une logique à trois valeurs : ~T~ (True), ~F~ (False) et ~U~ (Unknown) et les tables de vérité doivent en tenir compte
  
[[/home/phil-gab99/Documents/Notes/IFT-2935/20220131204230-valeurs_absentes.org_20220131_204518_ISsiR7.png]]

- Les valeurs ~NULL~ ne sont pas considérées dans les fonctions d’agrégat
  - ~count~ compte les valeurs non nulles
  - ~sum~ additionne les valeurs non nulles de l’agrégat
  - même chose pour ~avg~ etc
    
- Si un ~NULL~ intervient dans une opération arithmétique, le résultat est ~NULL~ - ~5 + NULL~ est ~NULL~
- ~SELECT MAX(a) FROM r~ retourne ~NULL~ si la table ~r~ est vide
- Même comportement pour ~avg~ , ~sum~ mais count retourne bien ~0~
- Pour vérifier qu’une valeur est nulle, on utilise ~IS NULL~ ou ~IS NOT NULL~
- En PostgreSQL, ~coalesce(a,v)~ retourne ~v~ si ~a~ est ~NULL~, sinon retourne la valeur de ~a~

** Exemple

| nom  | devoir | note |
|------+--------+------|
| Jean |      1 | 18.0 |
| Jean |      2 | 19.0 |
| Jean |      3 | NULL |
| Jean |      4 | NULL |
| Lise |      1 | 18.0 |
| Lise |      2 | 20.0 |
| Lise |      3 | 16.0 |
| Lise |      4 | 16.0 |
| Paul |      1 | 15.0 |
| Paul |      2 | 18.0 |
| Paul |      3 | 17.0 |
| Paul |      4 | NULL |

#+begin_src sql

  SELECT nom,
         COUNT(note) AS nbdev,
         round(AVG(note),2) AS moy1,
         round(SUM(note)/COUNT(note),2) AS moy2,
         round(SUM(note)/COUNT(devoir),2) as moy
  FROM devoirs
  GROUP BY nom
  ORDER BY moy DESC;

#+end_src

Retourne:

| nom  | nbdev |  moy1 |  moy2 |  moy |
|------+-------+-------+-------+------|
| Lise |     4 |  17.5 |  17.5 | 17.5 |
| Paul |     3 | 16.67 | 16.67 | 12.5 |
| Jean |     2 |  18.5 |  18.5 | 9.25 |
