:PROPERTIES:
:ID:       168b5c5c-b287-459f-801d-9a409eb7ec45
:END:
#+title: ift2935-comment-exemple
#+STARTUP: latexpreview, inlineimages
#+date: [2022-01-25 Tue 21:55]

* Exemple Company

[[/home/phil-gab99/Documents/Notes/IFT-2935/20220125215544-comment_exemple.org_20220125_215621_Fn7V1i.png]]

- Si on ne se préoccupe pas de la taille des chaînes de caractères ou des valeurs numériques - On peut définir simplement en SQL la relation ~works_on~ comme suit:
  
#+begin_src sql

  create table works_on (
      essn integer not null,
      pno integer not null,
      hours numeric(5, 1),
      primary key (essn, pno),
      foreign key (essn) references employee(ssn),
      foreign key (pno) references project(pnumber)
  )
#+end_src

- ~not null~ exige une valeur - Il faut absolumentun numéro de projet
- ~primary key (essn, pno)~ fait de ~essn, pno~ la clé primaire de ~works_on~
- ~foreign key (pno) references project(pnumber)~  correspond à la flèche qui dit que le numéro de projet dans la table ~works_on~ doit correspondre à une valeur ~pnumber~ dans la table des projets (il doit y avoir un projet de ce numéro)

Pour peupler la table ~works_on~, on fait les insertions

#+begin_src sql

  insert into works_on values
      (123456789, 1, 32.5),
      (123456789, 2, 7.5),
      (666884444, 3, 40.0),
      ...
      (987654321, 30, 20.0),
      (987654321, 20, 15.0),
      (888665555, 20, null);

#+end_src

On remarque que rien n'empêche de mettre une valeur ~null~ pour les heures
On ne pourrait pas faire une insertion de ~(345, 45, 12)~ car 345 n'est pas un ~ssn~ d'employé (ce serait une violation de la condition de clé étrangère)


La table des projets (en ne gardant que des textes et des integers) a pour définition:

#+begin_src sql

  create table project(
      pname text not null,
      pnumber integer not null,
      plocation text not null,
      dnum integer not null,
      primary key (pnumber),
      unique (pname),
      foreign key (dnum) references department(dnumber)
  );

#+end_src

La condition ~unique (pname)~ signifie que ~pname~ est déclaré comme clé candidate - Il ne peut pas y avoir deux projets du même nom
Si on essaie d'insérer deux projets de même nom, le SGBD se doit de refuser
Le fait que ~pname~ soit unique permettrait de l'utiliser comme clé étrangère dans une autre table

* Type énuméré et clé étrangère

Si une relation ~service(_nom_, _jour_)~ doit dire qui est au café étudiant tel jour et si on veut forcer les jours à être dans la liste lundi, mardi, mercredi, jeudi, vendredi
On se donne une relation ~jours(_jour_)~ et on pose ~service(_nom_, _#jour_)~

Avec des tables concrètes SQL, voici la définition pour les jours, avec les valeurs, et la définition pour service:

#+begin_src sql

  CREATE TABLE service(
      nom TEXT not null,
      jour TEXT not null,
      primary key (nom, jour),
      foreign key (jour) references jours(jour)
  );
  INSERT INTO jours VALUES
      ('lundi'), ('mardi'), ('mercredi'), ('jeudi'), ('vendredi');

#+end_src

On a effectivement besoin de la table *jours* de clé ~jour~ avec les tuples suivants
| _jours_    |
|----------|
| lundi    |
| mardi    |
| mercredi |
| jeudi    |
| vendredi |

Les insertions suivantes sont alors permises

#+begin_src sql

  INSERT INTO service VALUES
      ('Jean', 'lundi'), ('Aline', 'lundi'), ('Aline', 'mardi'), ('Albert', 'mercredi'), ('Aline', 'jeudi'), ('Jean', 'vendredi') 

#+end_src

Mais on ne pourrait pas insérer ~('Jean', 'vend')~ ni même ~('Jean', 'Lundi')~ (la lettre majuscule) car ni ~'vend'~ ni ~'Lundi'~ ne se trouvent comme clé dans la table *jours*


On peut faire autrement en posant une contrainte d'intégrité avec ~check~

#+begin_src sql

  CREATE TABLE service(
      nom TEXT not null,
      jour TEXT not null,
      primary key (nom, jour),
      check (jour in ('lundi', 'mardi', 'mercredi', 'jeudi', 'vendredi'))
  );

#+end_src

Ceci permet les insertions

#+begin_src sql

  INSERT INTO services VALUES
      ('Jean', 'lundi'), ('Aline', 'lundi'), ('Aline', 'mardi'), ('Albert', 'mercredi'), ('Aline', 'jeudi'), ('Jean', 'vendredi') 

#+end_src

Si on essaie d'insérer ~('Jean', 'vend')~ ou ~('Jean', 'Lundi')~, la contrainte d'intégrité est violée et l'insertion ne se fait pas
Si la liste est longue la méthode de clé étrangère est préférable
