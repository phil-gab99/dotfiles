#include <stdio.h>
#include <unistd.h>
#include <sys/types.h>
#include <sys/wait.h>

int main() {
    pid_t pid;

    // fork a child process
    pid = fork();

    // error occurred
    if (pid < 0) {
        fprintf(stderr, "Fork Failed\n");
        return 1;
    }
    // child process
    else if (pid == 0) {
        printf("I am the child %d\n", pid);
        execlp("ls", "ls", NULL); // Appel à exec
    }
    // parent process
    // parent will wait for the child to complete
    else {
        printf("I am the parent %d\n", pid);
        // Pas de contrôle sur l'ordre d'exécution entre le parent et l'enfant
        // C'est aléatoire
        wait(NULL);
        printf("Child Complete\n");
    }

    printf("After the if \n");
    return 0;
}
