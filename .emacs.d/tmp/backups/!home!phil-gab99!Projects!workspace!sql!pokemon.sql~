BEGIN TRANSACTION;

DROP SCHEMA IF EXISTS pokemon CASCADE;

CREATE SCHEMA pokemon;
SET search_path TO pokemon;
CREATE TABLE dresseur(
  id_dresseur INT PRIMARY KEY,
  nom_dresseur VARCHAR(20),
  age INT,
  nb_badges INT
);
INSERT INTO dresseur VALUES('1','Ash','12','96');
INSERT INTO dresseur VALUES('2','Misty','13','4');
INSERT INTO dresseur VALUES('3','Gary','12','8');
INSERT INTO dresseur VALUES('4','Agatha','45','80');
CREATE TABLE pokemon(
  id_dresseur INT,
  nom_pokemon VARCHAR(20) UNIQUE,
  niveau INT,
  points_de_vie INT,
  FOREIGN KEY (id_dresseur) REFERENCES dresseur(id_dresseur)
);
INSERT INTO pokemon VALUES('1','Pikachu','120','235');
INSERT INTO pokemon VALUES('1','Charizard','42','148');
INSERT INTO pokemon VALUES('2','Stari','28','78');
INSERT INTO pokemon VALUES('4','Evoli','150','150');
CREATE TABLE attaque(
  nom_pokemon VARCHAR(20),
  nom_attaque VARCHAR(20) UNIQUE,
  type VARCHAR(20),
  puissance INT,
  FOREIGN KEY (nom_pokemon) REFERENCES pokemon(nom_pokemon)
);
INSERT INTO attaque VALUES('Stari','Water gun','Water','40');
INSERT INTO attaque VALUES('Pikachu','Thunder','Electric','120');
INSERT INTO attaque VALUES('Charizard','Hyper Beam','Normal','150');
INSERT INTO attaque VALUES('Evoli','Charge','Normal','150');

SELECT nom_dresseur, COUNT(nom_pokemon) AS nb_pokemons
FROM Dresseur NATURAL JOIN Pokemon
GROUP BY id_dresseur
HAVING COUNT(nom_pokemon) >= 2;
ROLLBACK;
