:PROPERTIES:
:ID:       d1303368-bd35-45ae-9181-a3749b4aa3fd
:END:
#+title: ift2935-controle-concurrence
#+STARTUP: latexpreview inlineimages
#+date: [2022-03-31 Thu 16:59]

* Contrôle de concurrence

** Stratégies de contrôle de concurrence

- Verrouillage (locking)
  - Bloque l'accès à une ressource durant son utilisation par une transaction
  - Premier arrivé premier servi
  - Garantit la sérialisabilité (sauf que s'il y a inter-blocage, il faudra éventuellement annuler une transaction)
  - Souvent plus contraignant que nécessaire

- Estampillage (timestamping)
  - Impose aux opératons non-permutables de suivre l'ordre des estampilles des transactions (ex.: temps du début de la transaction)
  - Annulation (rollback) d'une transaction en cas de conflit
  - Peut entraîner l'annulation de transactions non-dangereuses

- Muti-version
  - Chaque transaction écrit dans sa propre version des données
  - Les lectures sont faites dans des versions récentes
  - Évite le blocage des ressources
  - Plus difficile à gérer

** Ordonnancement non-recouvrable

Soit l'ordonnancement

\begin{tabular}{l l l l}
$T_1:$ & $R(A), W(A)$ & & $R(B), W(B), Ab$ \\
$T_2:$ & & $R(A), W(A), C$ &
\end{tabular}

- $T_1$ est annulée - Toutes les modifications à la BD faites par $T_1$ doivent être annulées, $A$ doit reprendre sa valeur initiale
- L'annulation a lieu après une lecture impropre de $A$ dans $T_2$
- La valeur lue par $T_2$ est erronée - La base est inconsistante
- Si la confirmation de $T_2$ était après l'annulation de $T_1$, on devrait annuler $T_2$ - Il y aurait annulation en cascade
- Ici $T_2$ est déjà confirmée - C'est non-recouvrable
- Il faut une politique qui empêche les ordonnancements non-recouvrables - On veut aussi éviter les annulations en cascade

** Verrouillage en deux phases
