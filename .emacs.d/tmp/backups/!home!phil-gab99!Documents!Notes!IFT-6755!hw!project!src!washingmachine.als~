module AboutProductLines

abstract sig Feature {}

abstract sig BallPort {} {
    some c: Component | this in c.ballPorts
}

abstract sig Socket {} {
    some c: Component | this in c.sockets
}

abstract sig Component {
    sockets: set Socket,
    ballPorts: set BallPort
} {
    all c: Component |
        this != c => (no c.@sockets & sockets) && (no c.@ballPorts & ballPorts)
}

abstract sig ComponentDiagram {
    components: set Component,
    delegLinks: Socket lone->lone BallPort
} {
    all c1, c2: components |
        some (c1.sockets.delegLinks & c2.ballPorts) => c1 != c2
} 

one sig Wash, Heat, Delay, Dry extends Feature {}

one sig dpi, hpi, tpi, tdpi extends BallPort {} {
    dpi in Heater.ballPorts
    hpi in Dryer.ballPorts
    tpi + tdpi in Timer.ballPorts
}

one sig dri, hri, tri, tdri extends Socket {} {
    dri + hri + tri in MainController.sockets
    tdri in Dryer.sockets
}

one sig MainController, Heater, Timer, Dryer extends Component {}

one sig SPLWashingMachine extends ComponentDiagram {
    activeFeatures: set Feature,
    cd, ch, ct, dt: delegLinks
} {
    // Constraint on relations
    #cd <= 1
    #ch <= 1
    #ct <= 1
    #dt <= 1

    // Feature Model constraints
    Wash in activeFeatures
    not (Delay in activeFeatures and Heat in activeFeatures)
    Dry in activeFeatures or Dry not in activeFeatures

    // Domain Model constraints
    #cd = 1 => MainController + Heater in components and {dri -> dpi} = cd
    #ch = 1 => MainController + Dryer in components and {hri -> hpi} = ch
    #ct = 1 => MainController + Timer in components and {tri -> tpi} = ct
    #dt = 1 => Dryer + Timer in components and {tdri -> tdpi} = dt

    // Presence Conditions - Feature Mapping
    Wash in activeFeatures <=> MainController in components

    Heat in activeFeatures <=> #cd = 1
    Heat in activeFeatures <=> Heater in components

    Dry in activeFeatures <=> #ch = 1
    Dry in activeFeatures <=> #dt = 1
    Dry in activeFeatures <=> Dryer in components

    Delay in activeFeatures <=> #ct = 1

    Dry in activeFeatures or Delay in activeFeatures <=> Timer in components
}
