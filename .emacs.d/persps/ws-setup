#s(persp--state-complete ("/home/phil-gab99/Documents/Org/Agenda/Mail.org" "/home/phil-gab99/Documents/Org/Agenda/Schedule-S5.org" "/home/phil-gab99/Documents/Org/Recurrent/Birthdays.org" "/home/phil-gab99/Documents/Org/Agenda/Tasks.org" "/home/phil-gab99/.emacs.d/desktop.org" "/home/phil-gab99/.emacs.d/emacs-config.org") (#s(persp--state-frame #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("demo" #s(persp--state-single nil (((min-height . 4) (min-width . 10) (min-height-ignore . 3) (min-width-ignore . 4) (min-height-safe . 1) (min-width-safe . 2) (min-pixel-height . 80) (min-pixel-width . 100) (min-pixel-height-ignore . 46) (min-pixel-width-ignore . 40) (min-pixel-height-safe . 20) (min-pixel-width-safe . 20)) leaf (pixel-width . 1920) (pixel-height . 1028) (total-width . 192) (total-height . 51) (normal-height . 1.0) (normal-width . 1.0) (buffer "*scratch* (demo)" (selected . t) (hscroll . 0) (fringes 10 10 nil nil) (margins nil) (scroll-bars nil 0 t nil 0 t nil) (vscroll . 0) (dedicated) (point . 145) (start . 1)))))) ("demo")) #s(persp--state-frame #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("code" #s(persp--state-single nil (((min-height . 4) (min-width . 10) (min-height-ignore . 3) (min-width-ignore . 4) (min-height-safe . 1) (min-width-safe . 2) (min-pixel-height . 80) (min-pixel-width . 100) (min-pixel-height-ignore . 46) (min-pixel-width-ignore . 40) (min-pixel-height-safe . 20) (min-pixel-width-safe . 20)) leaf (pixel-width . 1920) (pixel-height . 1028) (total-width . 192) (total-height . 51) (normal-height . 1.0) (normal-width . 1.0) (buffer "*scratch* (code)" (selected . t) (hscroll . 0) (fringes 10 10 nil nil) (margins nil) (scroll-bars nil 0 t nil 0 t nil) (vscroll . 0) (dedicated) (point . 145) (start . 1)))) "project" #s(persp--state-single nil (((min-height . 4) (min-width . 10) (min-height-ignore . 3) (min-width-ignore . 4) (min-height-safe . 1) (min-width-safe . 2) (min-pixel-height . 80) (min-pixel-width . 100) (min-pixel-height-ignore . 46) (min-pixel-width-ignore . 40) (min-pixel-height-safe . 20) (min-pixel-width-safe . 20)) leaf (pixel-width . 1920) (pixel-height . 1028) (total-width . 192) (total-height . 51) (normal-height . 1.0) (normal-width . 1.0) (buffer "*scratch* (project)" (selected . t) (hscroll . 0) (fringes 10 10 nil nil) (margins nil) (scroll-bars nil 0 t nil 0 t nil) (vscroll . 0) (dedicated) (point . 145) (start . 1)) (prev-buffers ("*scratch* (project)" 1 145)))))) ("code" "project")) #s(persp--state-frame #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("notes" #s(persp--state-single nil (((min-height . 4) (min-width . 10) (min-height-ignore . 3) (min-width-ignore . 4) (min-height-safe . 1) (min-width-safe . 2) (min-pixel-height . 80) (min-pixel-width . 100) (min-pixel-height-ignore . 46) (min-pixel-width-ignore . 40) (min-pixel-height-safe . 20) (min-pixel-width-safe . 20)) leaf (pixel-width . 1920) (pixel-height . 1028) (total-width . 192) (total-height . 51) (normal-height . 1.0) (normal-width . 1.0) (buffer "*scratch* (notes)" (selected . t) (hscroll . 0) (fringes 10 10 nil nil) (margins nil) (scroll-bars nil 0 t nil 0 t nil) (vscroll . 0) (dedicated) (point . 145) (start . 1)))))) ("notes")) #s(persp--state-frame #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("correction" #s(persp--state-single nil (((min-height . 4) (min-width . 10) (min-height-ignore . 3) (min-width-ignore . 4) (min-height-safe . 1) (min-width-safe . 2) (min-pixel-height . 80) (min-pixel-width . 100) (min-pixel-height-ignore . 46) (min-pixel-width-ignore . 40) (min-pixel-height-safe . 20) (min-pixel-width-safe . 20)) leaf (pixel-width . 1920) (pixel-height . 1028) (total-width . 192) (total-height . 51) (normal-height . 1.0) (normal-width . 1.0) (buffer "*scratch* (correction)" (selected . t) (hscroll . 0) (fringes 10 10 nil nil) (margins nil) (scroll-bars nil 0 t nil 0 t nil) (vscroll . 0) (dedicated) (point . 145) (start . 1)) (prev-buffers ("*scratch* (correction)" 1 145)))))) ("correction")) #s(persp--state-frame #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("mail" #s(persp--state-single nil (((min-height . 4) (min-width . 10) (min-height-ignore . 3) (min-width-ignore . 4) (min-height-safe . 1) (min-width-safe . 2) (min-pixel-height . 80) (min-pixel-width . 100) (min-pixel-height-ignore . 46) (min-pixel-width-ignore . 40) (min-pixel-height-safe . 20) (min-pixel-width-safe . 20)) leaf (pixel-width . 1920) (pixel-height . 1028) (total-width . 192) (total-height . 51) (normal-height . 1.0) (normal-width . 1.0) (buffer "*scratch* (mail)" (selected . t) (hscroll . 0) (fringes 10 10 nil nil) (margins nil) (scroll-bars nil 0 t nil 0 t nil) (vscroll . 0) (dedicated) (point . 145) (start . 1)) (prev-buffers ("*scratch* (social)" 1 145) ("*scratch* (mail)" 1 145)))) "social" #s(persp--state-single nil (((min-height . 4) (min-width . 10) (min-height-ignore . 3) (min-width-ignore . 4) (min-height-safe . 1) (min-width-safe . 2) (min-pixel-height . 80) (min-pixel-width . 100) (min-pixel-height-ignore . 46) (min-pixel-width-ignore . 40) (min-pixel-height-safe . 20) (min-pixel-width-safe . 20)) leaf (pixel-width . 1920) (pixel-height . 1028) (total-width . 192) (total-height . 51) (normal-height . 1.0) (normal-width . 1.0) (buffer "*scratch* (mail)" (selected . t) (hscroll . 0) (fringes 10 10 nil nil) (margins nil) (scroll-bars nil 0 t nil 0 t nil) (vscroll . 0) (dedicated) (point . 145) (start . 1)) (prev-buffers ("*scratch* (social)" 1 145) ("*scratch* (mail)" 1 145)))))) ("mail" "social")) #s(persp--state-frame #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("agenda" #s(persp--state-single ("Mail.org" "Schedule-S5.org" "Birthdays.org" "Tasks.org") (((min-height . 4) (min-width . 10) (min-height-ignore . 3) (min-width-ignore . 4) (min-height-safe . 1) (min-width-safe . 2) (min-pixel-height . 80) (min-pixel-width . 100) (min-pixel-height-ignore . 46) (min-pixel-width-ignore . 40) (min-pixel-height-safe . 20) (min-pixel-width-safe . 20)) leaf (pixel-width . 1920) (pixel-height . 1028) (total-width . 192) (total-height . 51) (normal-height . 1.0) (normal-width . 1.0) (buffer "*scratch* (agenda)" (selected . t) (hscroll . 0) (fringes 10 10 nil nil) (margins nil) (scroll-bars nil 0 t nil 0 t nil) (vscroll . 0) (dedicated) (point . 145) (start . 1)) (prev-buffers ("Mail.org" 1 1) ("*scratch* (agenda)" 1 145)))) "config" #s(persp--state-single ("desktop.org" "emacs-config.org") (((min-height . 4) (min-width . 10) (min-height-ignore . 3) (min-width-ignore . 4) (min-height-safe . 1) (min-width-safe . 2) (min-pixel-height . 80) (min-pixel-width . 100) (min-pixel-height-ignore . 46) (min-pixel-width-ignore . 40) (min-pixel-height-safe . 20) (min-pixel-width-safe . 20)) leaf (pixel-width . 1920) (pixel-height . 1028) (total-width . 192) (total-height . 51) (normal-height . 1.0) (normal-width . 1.0) (buffer "desktop.org" (selected . t) (hscroll . 0) (fringes 10 10 t nil) (margins 20) (scroll-bars nil 0 t nil 0 t nil) (vscroll . 0) (dedicated) (point . 1) (start . 1)) (prev-buffers ("desktop.org" 1 1) ("*scratch* (config)" 1 145) ("emacs-config.org" 9692 11221)))))) ("agenda" "config"))))