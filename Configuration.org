#+title: General Application Configurations
#+author: Philippe Gabriel
#+property: header-args    :tangle-mode (identity #o444)
#+property: header-args:sh :tangle-mode (identity #o555)


* General Profile Management

Configuration files and scripts for basic gnu/linux profile

** Applications

*** Mars

#+begin_src conf :tangle ~/.dotfiles/.local/share/applications/Mars.desktop

  [Desktop Entry]
  Type=Application
  Version=4.5
  Name=Mars
  Comment=A MIPS Simulator
  Exec=java -jar /home/phil-gab99/Packages/Mars4_5.jar
  Terminal=false

#+end_src

*** LMC - Little Man Computer

#+begin_src conf :tangle ~/.dotfiles/.local/share/applications/LMC.desktop

  [Desktop Entry]
  Type=Application
  Version=1.0
  Name=LMC
  Comment=Little Man Computer, an assembly language simulator
  Exec=java -jar /home/phil-gab99/Packages/LMC.jar
  Terminal=false

#+end_src

** Configuration

*** Bash Configuration

**** Bash Profile

#+begin_src shell :tangle ~/.dotfiles/.bash_profile

  # Defer to .profile
  [ -f ~/.profile ] && . ~/.profile

#+end_src

**** Bash Aliases

To temporarily bypass an alias, precede the command with a ~\~

#+begin_src shell :tangle ~/.dotfiles/.bash_aliases :shebang ### -*- sh -*-

  ################################################################################
  # GENERAL ALIASES
  ################################################################################

  # Add an "alert" alias for long running commands.
  # Use like so: sleep 10; alert
  alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

  # CPU usage command
  alias cpu="grep 'cpu ' /proc/stat | awk '{usage=(\$2+\$4)*100/(\$2+\$4+\$5)} END {print usage}' | awk '{printf(\"%.1f\n\", \$1)}'"

  # Alias to show disk space
  alias diskspace="du -S | sort -n -r | more"

  ################################################################################
  # MODIFIED COMMANDS ALIASES
  ################################################################################

  # Grep aliases
  alias grep='grep --color=always'
  alias fgrep='grep -F --color=always'
  alias egrep='grep -E --color=always'

  # Additional flags to regular commands
  alias cp='cp -iv'
  alias mv='mv -iv'
  alias rm='rm -iv'
  alias mkdir='mkdir -p'
  alias ps='ps auxf'
  alias ping='ping -c 10'
  alias less='less -R'

  # Directory listing aliases
  alias ls='ls -AFh --color=always' # Add colors and file type extensions
  alias la='ls -Alh'                # Show hidden files
  alias lx='ls -lXBh'               # Sort by extension
  alias lk='ls -lSrh'               # Sort by size
  alias lc='ls -lcrh'               # Sort by change time
  alias lu='ls -lurh'               # Sort by access time
  alias lr='ls -lRh'                # Recursive ls
  alias lt='ls -ltrh'               # Sort by date
  alias lm='ls -alh | more'         # Pipe through 'more'
  alias lw='ls -xAh'                # Wide listing format
  alias ll='ls -Fls'                # Long listing format
  alias labc='ls -lap'              # Alphabetical sort
  alias lf="ls -l | egrep -v '^d'"  # Files only
  alias ldir="ls -l | egrep '^d'"   # Directories only

  # Search files in the current folder
  alias find="find . | grep "

  # Provenance of commands including aliases
  alias which='alias | which --tty-only --read-alias --show-dot --show-tilde'

  ################################################################################
  # SYNONYMOUS ALIASES
  ################################################################################

  # Treat Vi as Vim
  alias vi='vim'

  # Some software relies on 'cc' being 'gcc'
  alias cc="gcc"

  ################################################################################
  # MULTI-VERSIONED COMMANDS ALIASES
  ################################################################################

  # alias python="python3"

  ################################################################################
  # APPLICATION ALIASES
  ################################################################################

  # Qutebrowser alias for some texture issues
  alias qutebrowser='qutebrowser --qt-flag disable-seccomp-filter-sandbox'

  # Spyder alias since web widgets cause crash
  alias spyder="spyder --no-web-widgets"

  # Arduino alias as it is not exported by flatpak
  alias arduino="~/.local/share/flatpak/exports/bin/cc.arduino.arduinoide"

#+end_src

**** Bash Terminal Configuration

#+begin_src shell :tangle ~/.dotfiles/.bashrc

  # Export 'SHELL' to child processes.  Programs such as 'screen' honor it and
  # otherwise use /bin/sh.
  export SHELL

  if [[ $- != *i* ]]; then
      # We are being invoked from a non-interactive shell.  If this is an SSH
      # session (as in "ssh host command"), source /etc/profile so we get PATH and
      # other essential variables.
      [[ -n "$SSH_CLIENT" ]] && . /etc/profile

      # Don't do anything else.
      return
  fi

  ################################################################################
  # SOURCED SCRIPTS
  ################################################################################

  # Source global definitions
  [ -f /etc/bashrc ] && . /etc/bashrc

  # Enable bash programmable completion features in interactive shells
  [ -f /run/current-system/profile/share/bash-completion/bash-completion ] && . /run/current-system/profile/share/bash-completion/bash-completion

  # Anaconda script initializations
  __conda_setup="$('/home/phil-gab99/.guix-extra-profiles/python/python/bin/conda' 'shell.bash' 'hook' 2> /dev/null)"
  if [ $? -eq 0 ]; then
      eval "$__conda_setup"
  else
      [ -f "$GUIX_EXTRA_PROFILES/python/python/etc/profile.d/conda.sh" ] && . "$GUIX_EXTRA_PROFILES/python/python/etc/profile.d/conda.sh"
  fi
  unset __conda_setup

  # Alias definitions
  [ -f ~/.bash_aliases ] && . ~/.bash_aliases

  # Angular CLI autocompletion
  source <(ng completion script)

  ################################################################################
  # HISTORY CONTROL
  ################################################################################

  # Don't put duplicate lines or lines starting with space in the history.
  # See bash(1) for more options
  HISTCONTROL=ignoreboth

  # Append to the history file, don't overwrite it
  shopt -s histappend
  PROMPT_COMMAND='history -a'

  # For setting history length see HISTSIZE and HISTFILESIZE in bash(1)
  HISTSIZE=1000
  HISTFILESIZE=2000

  # If set, the pattern "**" used in a pathname expansion context will
  # match all files and zero or more directories and subdirectories.
  #shopt -s globstar

  # Make less more friendly for non-text input files, see lesspipe(1)
  [ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

  ################################################################################
  # NAVIGATION
  ################################################################################

  iatest=$(expr index "$-" i)

  # Check the window size after each command and, if necessary, update the values
  # of LINES and COLUMNS
  shopt -s checkwinsize

  # Allow ctrl-S for history navigation (with ctrl-R)
  stty -ixon

  # Ignore case on auto-completion
  # Show auto-completion list automatically, without double tab
  # Note: bind used instead of sticking these in .inputrc
  if [ $iatest -gt 0 ]; then
      bind "set show-all-if-ambiguous On";
      bind "set completion-ignore-case on";
  fi

  ################################################################################
  # COLORED COMMANDS
  ################################################################################

  # To have colors for ls and all grep commands such as grep, egrep and zgrep
  export CLICOLOR=1
  export LS_COLORS='no=00:fi=00:di=00;33:ln=01;36:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arj=01;31:*.taz=01;31:*.lzh=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.gz=01;31:*.bz2=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.avi=01;35:*.fli=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.ogg=01;35:*.mp3=01;35:*.wav=01;35:*.xml=00;31:'

  # Color for manpages in less makes manpages a little easier to read
  export LESS_TERMCAP_mb=$'\E[01;31m'
  export LESS_TERMCAP_md=$'\E[01;31m'
  export LESS_TERMCAP_me=$'\E[0m'
  export LESS_TERMCAP_so=$'\E[01;44;33m'
  export LESS_TERMCAP_se=$'\E[0m'
  export LESS_TERMCAP_us=$'\E[01;32m'
  export LESS_TERMCAP_ue=$'\E[0m'

  ################################################################################
  # SPECIAL FUNCTIONS
  ################################################################################

  # Parses git current branch when inside git project
  function parse_git_branch {
      git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/'
  }

  # Enable session to send information to vterm via properly escaped sequences
  function vterm_printf {
      if [ -n "$TMUX" ] && ([ "${TERM%%-*}" = "tmux" ] || [ "${TERM%%-*}" = "screen" ]); then
          # Tell tmux to pass the escape sequences through
          printf "\ePtmux;\e\e]%s\007\e\\" "$1"
      elif [ "${TERM%%-*}" = "screen" ]; then
          # GNU screen (screen, screen-256color, screen-256color-bce)
          printf "\eP\e]%s\007\e\\" "$1"
      else
          printf "\e]%s\e\\" "$1"
      fi
  }

  # Directory tracking in vterm
  function vterm_prompt_end {
      vterm_printf "51;A$(whoami)@$(hostname):$(pwd)"
  }

  # elisp commands in vterm
  function vterm_cmd {
      local vterm_elisp=""

      while [ $# -gt 0 ]; do
          vterm_elisp="$vterm_elisp""$(printf '"%s" ' "$(printf "%s" "$1" | sed -e 's|\\|\\\\|g' -e 's|"|\\"|g')")"
          shift
      done
      vterm_printf "51;E$vterm_elisp"
  }

  # Completely clear buffer
  if [ "$INSIDE_EMACS" = 'vterm' ]; then
      function clear {
          vterm_printf "51;Evterm-clear-scrollback"
          tput clear
      }
  fi


  ################################################################################
  # ELisp Functions
  ################################################################################

  function find-file {
      vterm_cmd find-file "$(realpath "${@:-.}")"
  }

  ################################################################################
  # COLORED PROMPT
  ################################################################################

  function __setprompt {
      local LAST_COMMAND=$? # Must come first!

      # Define colors
      local LIGHTGRAY="\033[0;37m"
      local WHITE="\033[1;37m"
      local BLACK="\033[0;30m"
      local DARKGRAY="\033[1;30m"
      local RED="\033[0;31m"
      local LIGHTRED="\033[1;31m"
      local GREEN="\033[0;32m"
      local LIGHTGREEN="\033[1;32m"
      local BROWN="\033[0;33m"
      local YELLOW="\033[1;33m"
      local BLUE="\033[0;34m"
      local LIGHTBLUE="\033[1;34m"
      local MAGENTA="\033[0;35m"
      local LIGHTMAGENTA="\033[1;35m"
      local CYAN="\033[0;36m"
      local LIGHTCYAN="\033[1;36m"
      local NOCOLOR="\033[0m"

      # Show error exit code if there is one
      if [[ $LAST_COMMAND != 0 ]]; then
          PS1="\[${LIGHTGRAY}\](\[${LIGHTRED}\]ERROR\[${LIGHTGRAY}\])-(\[${MAGENTA}\]Exit Code \[${LIGHTRED}\]${LAST_COMMAND}\[${LIGHTGRAY}\])-(\[${LIGHTGRAY}\]"
          if [[ $LAST_COMMAND == 1 ]]; then
              PS1+="General error"
          elif [ $LAST_COMMAND == 2 ]; then
              PS1+="Missing keyword, command, or permission problem"
          elif [ $LAST_COMMAND == 126 ]; then
              PS1+="Permission problem or command is not an executable"
          elif [ $LAST_COMMAND == 127 ]; then
              PS1+="Command not found"
          elif [ $LAST_COMMAND == 128 ]; then
              PS1+="Invalid argument to exit"
          elif [ $LAST_COMMAND == 129 ]; then
              PS1+="Fatal error signal 1"
          elif [ $LAST_COMMAND == 130 ]; then
              PS1+="Script terminated by Control-C"
          elif [ $LAST_COMMAND == 131 ]; then
              PS1+="Fatal error signal 3"
          elif [ $LAST_COMMAND == 132 ]; then
              PS1+="Fatal error signal 4"
          elif [ $LAST_COMMAND == 133 ]; then
              PS1+="Fatal error signal 5"
          elif [ $LAST_COMMAND == 134 ]; then
              PS1+="Fatal error signal 6"
          elif [ $LAST_COMMAND == 135 ]; then
              PS1+="Fatal error signal 7"
          elif [ $LAST_COMMAND == 136 ]; then
              PS1+="Fatal error signal 8"
          elif [ $LAST_COMMAND == 137 ]; then
              PS1+="Fatal error signal 9"
          elif [ $LAST_COMMAND -gt 255 ]; then
              PS1+="Exit status out of range"
          else
              PS1+="Unknown error code"
          fi
          PS1+="\[${LIGHTGRAY}\])\[${NOCOLOR}\]\n"
      else
          PS1=""
      fi

      # Date
      PS1+="\n\[${LIGHTGRAY}\]┌─[\[${CYAN}\] $(date +%a) $(date +%b-'%-d') $(date +'%-I':%M:%S%P)\[${LIGHTGRAY}\]]─"

      # CPU
      PS1+="[\[${MAGENTA}\] CPU $(cpu)%"

      # Jobs
      PS1+="\[${LIGHTGRAY}\]: \[${MAGENTA}\] \j"

      # Network Connections (for a server - comment out for non-server)
      # PS1+="\[${LIGHTGRAY}\]:\[${MAGENTA}\]Net $(awk 'END {print NR}' /proc/net/tcp)"

      PS1+="\[${LIGHTGRAY}\]]─"

      # Anaconda environment
      PS1+="\[${LIGHTGRAY}\][\[${LIGHTRED}\] $CONDA_DEFAULT_ENV\[${LIGHTGRAY}\]]─"

      # Git branch
      local BRANCH=$(parse_git_branch)
      if [ "$BRANCH" != "" ]; then
          PS1+="\[${LIGHTGRAY}\][\[${LIGHTGREEN}\] $BRANCH"

          # Comparison with upstream
          count=$(git rev-list --count --left-right @{upstream}..HEAD 2>/dev/null)
          case "$count" in
              "") p="";;      # No upstream
              "0	0") p="=";; # Equal to upstream
              "0	"*) p=">";; # Ahead of upstream
              *"	0") p="<";; # Behind upstream
              *) p="<>";;     # Diverged from upstream
          esac
          PS1+="$p"

          # Unstaged changes
          if [ "$(git ls-files -dm --exclude-standard 2>/dev/null)" ]; then
              PS1+="*"
          fi

          # Untracked files
          if [ "$(git ls-files -o --exclude-standard 2>/dev/null)" ]; then
              PS1+="%"
          fi

          # Staged changes
          if [ "$(git status -s 2>/dev/null | grep "^[MTADRCU]" 2>/dev/null)" ]; then
              PS1+="+"
          fi

          PS1+="\[${LIGHTGRAY}\]]─"
      fi

      # Total size of files in current directory
      PS1+="[\[${GREEN}\] $(ls -lah | command grep -m 1 total | sed 's/total //')\[${LIGHTGRAY}\]: "

      # Number of files
      PS1+="\[${GREEN}\] $(ls -A | wc -l)\[${LIGHTGRAY}\]]"

      PS1+="\n├─"

      # User and server
      PS1+="[\[${RED}\] \u@\H"

      # Current directory
      PS1+="\[${LIGHTGRAY}\]: \[${BROWN}\] \w\[${LIGHTGRAY}\]]"

      # Skip to the next line
      PS1+="\n└─"

      # Adjust the prompt depending on whether we're in 'guix environment'.
      [ -n "$GUIX_ENVIRONMENT" ] && PS1+="[\[${YELLOW}\]λ dev\[${LIGHTGRAY}\]]"

      if [[ $EUID -ne 0 ]]; then
          PS1+="──\[${GREEN}\]■\[${NOCOLOR}\] " # Normal user
      else
          PS1+="\[${RED}\]#\[${NOCOLOR}\] " # Root user
      fi

      # vterm
      PS1=$PS1'\[$(vterm_prompt_end)\]'

      # PS2 is used to continue a command using the \ character
      [ -n "$GUIX_ENVIRONMENT" ] && PS2+="[\[${YELLOW}\]λ dev\[${LIGHTGRAY}\]]"
      PS2="\[${LIGHTGRAY}\]>\[${NOCOLOR}\] "

      # PS3 is used to enter a number choice in a script
      [ -n "$GUIX_ENVIRONMENT" ] && PS3+="[\[${YELLOW}\]λ dev\[${LIGHTGRAY}\]]"
      PS3='Please enter a number from above list: '

      # PS4 is used for tracing a script in debug mode
      [ -n "$GUIX_ENVIRONMENT" ] && PS4+="[\[${YELLOW}\]λ dev\[${LIGHTGRAY}\]]"
      PS4='\[${LIGHTGRAY}\]+\[${NOCOLOR}\] '
  }

  PROMPT_COMMAND='__setprompt'

#+end_src

*** Browsers

**** Nyxt

*init.lisp*
    
#+begin_src lisp :tangle ~/.dotfiles/.config/nyxt/init.lisp

  (in-package #:nyxt-user)

  (defvar *request-resource-handlers* nil
    "The list of handlers to add to `request-resource-hook'.
  These handlers are usually used to block/redirect the requests.")

  (dolist (file
	   (list (nyxt-init-file "evil-mode.lisp")
		 (nyxt-init-file "status.lisp")
		 (nyxt-init-file "adblock.lisp")
		 (nyxt-init-file "style.lisp")))
    (load file))

  (load-after-system :nx-search-engines (nyxt-init-file "search-engines.lisp"))
  (load-after-system :nx-freestance-handler (nyxt-init-file "freestance.lisp"))
  ;; (load-after-system :nx-dark-reader (nyxt-init-file "dark-reader.lisp"))

  (define-configuration web-buffer
      ((request-resource-hook
	(reduce #'hooks:add-hook
		(mapcar #'make-handler-resource
			,*request-resource-handlers*)
		:initial-value %slot-default%))))

  (define-configuration browser
    ;; This is for Nyxt to never prompt me about restoring the previous session.
      ((session-restore-prompt :never-restore)
       (external-editor-program (list "emacsclient" "-c"))))

  ;;; Those are settings that every type of buffer should share
  (define-configuration (buffer web-buffer internal-buffer editor-buffer prompt-buffer)
    ((default-modes (append '(evil-normal-mode) %slot-default%))
     (download-engine :renderer)
     (current-zoom-ratio 1.25)))

  (define-configuration (prompt-buffer)
      ((default-modes (append '(evil-insert-mode) %slot-default%))))

  (define-configuration buffer
    ((default-new-buffer-url "https://duckduckgo.com")))

#+end_src

*evil-mode.lisp*

#+begin_src lisp :tangle ~/.dotfiles/.config/nyxt/evil-mode.lisp

  (in-package #:nyxt-user)

  ;; * Evil normal
  (define-mode evil-normal-mode ()
    "Enable evil style modal bindings (normal mode).
  To enable these bindings by default, add the mode to the list of default modes
  in your configuration file.

  Example:

  \(define-configuration buffer
    ((default-modes (append '(evil-normal-mode) %slot-default%))))

  In `evil-insert-mode', CUA bindings are still available unless
  `application-mode-p' is non-nil in `evil-insert-mode'.
  You can also enable `application-mode' manually to forward all keybindings to
  the web page.

  See also `evil-insert-mode'."
    ((glyph "N")
     (previous-keymap-scheme-name
      nil
      :type (or keymap:scheme-name null)
      :documentation "The previous keymap scheme that will be used when ending
      normal-mode")
     (keymap-scheme
      (define-scheme "evil-normal"
	scheme:vi-normal
	'("i" evil-insert-mode
	  "button1" evil-button1)))
     (destructor
      (lambda (mode)
	(setf (keymap-scheme-name (buffer mode))
	      (previous-keymap-scheme-name mode))
	 (setf (forward-input-events-p (buffer mode)) t)))
     (constructor
      (lambda (mode)
	(with-accessors
	 ((buffer buffer)) mode
	 (let ((evil-insert (find-submode buffer 'evil-insert-mode)))
	   (setf (previous-keymap-scheme-name mode)
		 (if evil-insert
		     (previous-keymap-scheme-name evil-insert)
		   (keymap-scheme-name buffer))))
	 ;; Destroy evil-normal mode after setting previous-keymap-scheme-name,
	 ;; or else we can't save the previous keymap scheme.
	 (evil-insert-mode :activate nil :buffer buffer)
	 (setf (keymap-scheme-name buffer) scheme:vi-normal)
	 (setf (forward-input-events-p buffer) nil))))))

  ;; * Evil insert
  (define-mode evil-insert-mode ()
    "Enable evil-insert-style modal bindings (insert mode).
  See `evil-normal-mode'."
    ((glyph "I")
     (rememberable-p nil)
     (previous-keymap-scheme-name nil
      :type (or keymap:scheme-name null)
      :documentation "The previous keymap scheme that will be used when ending
  vi-normal-mode.")
     (previous-evil-normal-mode nil
      :type (or evil-normal-mode null)
      :documentation "The `evil-normal-mode' that this insert mode is tied to.")
     (keymap-scheme
      (define-scheme "evil-insert"
	scheme:vi-insert
	'("button1" evil-button1
	  "C-g" nyxt/prompt-buffer-mode:cancel-input
	  "escape" switch-to-evil-normal-mode)))
     (destructor
      (lambda (mode)
	(setf (keymap-scheme-name (buffer mode))
	      (previous-keymap-scheme-name mode))))
     (constructor
      (lambda (mode)
	(with-accessors ((buffer buffer)) mode
	  (let ((evil-normal (find-submode buffer 'evil-normal-mode)))
	    (setf (previous-keymap-scheme-name mode)
		  (if evil-normal
		      (previous-keymap-scheme-name evil-normal)
		      (keymap-scheme-name buffer))
		  (previous-evil-normal-mode mode)
		  evil-normal))
	  (evil-normal-mode :activate nil :buffer buffer)
	  (setf (keymap-scheme-name buffer) scheme:vi-insert))))))


  ;; * Insert to normal
  (define-command switch-to-evil-normal-mode
      (&optional (mode
		  (find-submode (or (current-prompt-buffer) (current-buffer))
				'evil-insert-mode)))
    "Switch to the mode remembered to be the matching evil-normal one for this
    MODE. See also `evil-normal-mode' and `evil-insert-mode'."
    (when mode
      (enable-modes (list (or (and (previous-evil-normal-mode mode)
				   (mode-name (previous-evil-normal-mode mode)))
			      'evil-normal-mode))
		    (buffer mode))))

  (define-command evil-button1
      (&optional (buffer (or (current-prompt-buffer)
			     (current-buffer))))
    "Enable evil insert mode when focus is on an input element on the web page.
  See also `evil-normal-mode' and `evil-insert-mode'."
    (forward-to-renderer :window (current-window) :buffer buffer)
    (let ((response (nyxt/web-mode:%clicked-in-input? buffer)))
      (cond
	((and (nyxt/web-mode:input-tag-p response)
	      (find-submode buffer 'evil-normal-mode))
	 (evil-insert-mode))
	((and (not (nyxt/web-mode:input-tag-p response))
	      (find-submode buffer 'evil-insert-mode))
	 (evil-normal-mode)))))

  (define-configuration base-mode
      ((keymap-scheme
	(define-scheme "evil-base"
	  scheme:vi-normal
	  '("C-x C-c" quit
	    "C-x C-f" open-file
	    "[" switch-buffer-previous
	    "]" switch-buffer-next
	    "M-x" execute-command
	    "C-x k" delete-buffer
	    "C-x b" switch-buffer
	    "g r" reload-current-buffer
	    "o" set-url
	    "O" set-url-new-buffer
	    "m u" bookmark-url
	    "m d" delete-bookmark
	    "m l" list-bookmarks
	    "y u" copy-url
	    "y t" copy-title
	    "C-h h" help
	    "C-h C" describe-class
	    "C-h b" describe-bindings
	    "C-h c" describe-command
	    "C-h f" describe-function
	    "C-h k" describe-key
	    "C-h r" manual
	    "C-h s" describe-slot
	    "C-h t" tutorial
	    "C-h v" describe-variable
	    "w w" make-window
	    "w q" delete-current-window
	    "v" nyxt/visual-mode:visual-mode
	    "u" reopen-buffer)))))

  (define-configuration prompt-buffer
      ((keymap-scheme
	(define-scheme "evil-prompt"
	  scheme:vi-normal
	  '("C-j" select-next
	    "C-k" select-previous
	    "C-g" cancel-input)))))

  (define-configuration nyxt/web-mode:web-mode
      ((keymap-scheme
	(define-scheme "evil-web"
	  scheme:vi-normal
	  '("C-s" nyxt/web-mode:search-buffer
	    "H" nyxt/web-mode:history-backwards
	    "L" nyxt/web-mode:history-forwards
	    "y y" nyxt/web-mode:copy
	    "p" nyxt/web-mode:paste
	    "d d" nyxt/web-mode:cut
	    "u" nyxt/web-mode:undo
	    "f" nyxt/web-mode:follow-hint
	    "F" nyxt/web-mode:follow-hint-new-buffer
	    "C-r" nyxt/web-mode:redo
	    "m f" nyxt/web-mode:bookmark-hint
	    "+" nyxt/web-mode:zoom-page
	    "hyphen" nyxt/web-mode:unzoom-page
	    "=" nyxt/web-mode:reset-page-zoom
	    "j" nyxt/web-mode:scroll-down
	    "k" nyxt/web-mode:scroll-up
	    "h" nyxt/web-mode:scroll-left
	    "j" nyxt/web-mode:scroll-down
	    "k" nyxt/web-mode:scroll-up
	    "l" nyxt/web-mode:scroll-right
	    "G" nyxt/web-mode:scroll-to-bottom
	    "g g" nyxt/web-mode:scroll-to-top
	    "C-d" nyxt/web-mode:scroll-page-down
	    "C-u" nyxt/web-mode:scroll-page-up)))))

  (define-configuration nyxt/visual-mode:visual-mode
    ((keymap-scheme
      (define-scheme "evil-visual"
	scheme:vi-normal
	'("h" nyxt/visual-mode:backward-char
	  "j" nyxt/visual-mode:forward-line
	  "k" nyxt/visual-mode:backward-line
	  "l" nyxt/visual-mode:forward-char
	  "w" nyxt/visual-mode:forward-word
	  "e" nyxt/visual-mode:forward-word
	  "b" nyxt/visual-mode:backward-word
	  "$" nyxt/visual-mode:end-line
	  ")" nyxt/visual-mode:forward-sentence
	  "(" nyxt/visual-mode:backward-sentence
	  "}" nyxt/visual-mode:forward-paragraph
	  "{" nyxt/visual-mode:backward-paragraph
	  "C-u" nyxt/visual-mode:forward-document
	  "C-d" nyxt/visual-mode:backward-document
	  "0" nyxt/visual-mode:beginning-line
	  "C-g" nyxt/visual-mode:toggle-mark
	  "C-c" nyxt/visual-mode:visual-mode)))))

#+end_src

*status.lisp*

#+begin_src lisp :tangle ~/.dotfiles/.config/nyxt/status.lisp

  (in-package #:nyxt-user)

  ;;; Display modes as short glyphs (listed below) in the mode line
  ;;; (bottom-right of the screen).
  (define-configuration status-buffer
    ((glyph-mode-presentation-p t)))

  (define-configuration nyxt/force-https-mode:force-https-mode ((glyph "ϕ")))
  (define-configuration nyxt/blocker-mode:blocker-mode ((glyph "β")))
  (define-configuration nyxt/proxy-mode:proxy-mode ((glyph "π")))
  (define-configuration nyxt/reduce-tracking-mode:reduce-tracking-mode
    ((glyph "τ")))
  (define-configuration nyxt/certificate-exception-mode:certificate-exception-mode
    ((glyph "χ")))
  (define-configuration nyxt/style-mode:style-mode ((glyph "ϕ")))
  (define-configuration nyxt/help-mode:help-mode ((glyph "?")))
  (define-configuration nyxt/web-mode:web-mode ((glyph "ω")))
  (define-configuration nyxt/auto-mode:auto-mode ((glyph "α")))
  (define-configuration nyxt/cruise-control-mode:cruise-control-mode ((glyph "σ")))

#+end_src

*adblock.lisp*

#+begin_src lisp :tangle ~/.dotfiles/.config/nyxt/adblock.lisp

  (in-package #:nyxt)

  (define-configuration nyxt/blocker-mode:blocker-mode
    ((nyxt/blocker-mode:hostlists
      (mapcar (lambda (h)
		;; Update every minute
		(setf (nyxt/blocker-mode:update-interval h) 60))
	      %slot-default%))))

  (define-configuration buffer
    ((default-modes (append '(blocker-mode noscript-mode) %slot-default%))))

#+end_src

*style.lisp*

#+begin_src lisp :tangle ~/.dotfiles/.config/nyxt/style.lisp

  (in-package #:nyxt-user)

  (define-configuration window
      ((message-buffer-style
	(str:concat
	 %slot-default%
	 (cl-css:css
	  '((body
	     :background-color "#282c34"
	     :color "#cccccc")))))))
  ;;; Color config for prompt-buffer (minibuffer in Emacs parlance).
  (define-configuration prompt-buffer
      ((style (str:concat
	       %slot-default%
	       (cl-css:css
		'((body
		   :background-color "#282c34"
		   :color "#cccccc")
		  ("#prompt-area"
		   :background-color "#282c34")
		  ;; The area you input text in.
		  ("#input"
		   :background-color "#cccccc")
		  (".source-name"
		   :color "#cccccc"
		   :background-color "#202231")
		  (".source-content"
		   :background-color "#282c34")
		  (".source-content th"
		   :border "1px solid #202231"
		   :background-color "#282c34")
		  ;; The currently highlighted option.
		  ("#selection"
		   :background-color "#98f979"
		   :color "#282c34")
		  (.marked :background-color "#4682d9"
			   :font-weight "bold"
			   :color "#cccccc")
		  (.selected :background-color "#282c34"
			     :color "#cccccc")))))))
  ;;; Internal (i.e. help, info, describe-* buffers). Usually work for
  ;;; simple HTML display, so I'm overriding lots of things there.
  ;;;
  ;;; Panel buffers are the same in regards to style.
  (define-configuration (internal-buffer panel-buffer)
      ((style
	(str:concat
	 %slot-default%
	 (cl-css:css
	  '((title
	     :color "#cccccc")
	    (body
	     :background-color "#282c34"
	     :color "#cccccc")
	    (hr
	     :color "#eead0e")
	    (a
	     :color "#61afef")
	    (.button
	     :color "#ffffff"
	     :background-color "#006fff")))))))
  ;;; History-tree-mode is a mode used in `history-tree' and
  ;;; `buffer-history-tree' buffers. It's not enough to customize
  ;;; `internal-buffer' to cover it, thus I'm customizing it
  ;;; specifically.
  (define-configuration nyxt/history-tree-mode:history-tree-mode
      ((nyxt/history-tree-mode::style
	(str:concat
	 %slot-default%
	 (cl-css:css
	  '((body
	     :background-color "#282c34"
	     :color "#cccccc")
	    (hr
	     :color "#cccccc")
	    (a
	     :color "#61afef")
	    ;; Those three below are here to color the tree-branching list
	    ;; markers in white.
	    ("ul li::before"
	     :background-color "#cccccc")
	    ("ul li::after"
	     :background-color "#cccccc")
	    ("ul li:only-child::before"
	     :background-color "#cccccc")))))))
  (define-configuration nyxt/web-mode:web-mode
      ;; The style of highlighted boxes, e.g. link hints.
      ((nyxt/web-mode:highlighted-box-style
	(cl-css:css
	 '((".nyxt-hint.nyxt-highlight-hint"
	    :font-weight "normal"
	    :background "#494949"))))))
  ;;; Status buffer is the strip above the message buffer/echo area.
  ;;; Modeline in Emacs parlance.
  (define-configuration status-buffer
      ((style (str:concat
	       %slot-default%
	       (cl-css:css
	      ;; Arrows on the left.
		'(("#controls"
		   :border-top "1px solid #ffffff"
		   :background-color "#737373")
		  ;; To the right of the arrows.
		  ("#url"
		   :background-color "#21252b"
		   :color "#cccccc"
		   :border-top "1px solid #cccccc")
		  ;; Far to the right.
		  ("#modes"
		   :background-color "#21252b"
		   :border-top "1px solid #cccccc")
		  ;; The center segment.
		  ("#tabs"
		   :background-color "#737373"
		   :color "#282c34"
		   :border-top "1px solid #cccccc")))))))
  (define-configuration nyxt/style-mode:dark-mode
      ((style #.(cl-css:css
		 '((*
		    :background-color "#282c34 !important"
		    :background-image "none !important"
		    :color "#cccccc")
		   (a
		    :background-color "#282c34 !important"
		    :background-image "none !important"
		    :color "#556B2F !important"))))))

#+end_src

*freestance.lisp*

#+begin_src lisp :tangle ~/.dotfiles/.config/nyxt/freestance.lisp

  (in-package #:nyxt-user)

  (setq *request-resource-handlers*
	(nconc *request-resource-handlers*
	       nx-freestance-handler:*freestance-handlers*))

#+end_src

*dark-reader.lisp*

#+begin_src lisp :tangle ~/.dotfiles/.config/nyxt/dark-reader.lisp

  (in-package #:nyxt-user)

  (define-configuration nx-dark-reader:dark-reader-mode
    ((nxdr:selection-color "#494949")
     (nxdr:background-color "#282c34")
     (nxdr:text-color "#cccccc")))

  (push 'nx-dark-reader:dark-reader-mode *web-buffer-modes*)

#+end_src

*search-engines.lisp*

#+begin_src lisp :tangle ~/.dotfiles/.config/nyxt/search-engines.lisp

  (in-package #:nyxt-user)

  ;;;; This is a file with settings for my nx-search-engines extension.

  ;;; My DDG settings, shared between the usual, image-search and other
  ;;; types of DuckDuckGo.
  (defvar *duckduckgo-keywords*
    '(:theme :dark
      :help-improve-duckduckgo nil
      :homepage-privacy-tips nil
      :privacy-newsletter nil
      :newsletter-reminders nil
      :install-reminders nil
      :install-duckduckgo nil
      :units-of-measure :metric
      :keyboard-shortcuts t
      :advertisements nil
      :open-in-new-tab nil
      :infinite-scroll t
      :safe-search :off
      :font-size :medium
      :header-behavior :on-fixed
      :font :helvetica
      :background-color "000000"
      :center-alignment t))

  (define-configuration buffer
      ((search-engines
	(list
	 ;; engines: is a prefix for `nx-search-engines',
	 ;; it only works if you load nx-search-engines.
	 (engines:google :shortcut "gmaps"
			 :object :maps)
	 (engines:wikipedia :shortcut "w")
	 (engines:google :shortcut "g"
			 :safe-search nil)
	 (apply #'engines:duckduckgo-images
		:shortcut "i" *duckduckgo-keywords*)
	 (engines:duckduckgo-html-only :shortcut "dho")
	 (engines:github :shortcut "git")
	 (apply #'engines:duckduckgo
		:shortcut "d" *duckduckgo-keywords*)))))

#+end_src

**** Qutebrowser

*Main configuration*

#+begin_src python :tangle ~/.dotfiles/.config/qutebrowser/config.py :noweb yes

  import sys, os

  ################################################################################
  # ALIASES
  ################################################################################

  # Type - dict
  c.aliases = {
      'w': 'session-save',
      'q': 'close',
      'qa': 'quit',
      'wq': 'quit --save',
      'wqa': 'quit --save'
  }

  ################################################################################
  # TABS AND WINDOW MANAGEMENT
  ################################################################################

  # Open new window for every tab
  # Type - Bool
  c.tabs.tabs_are_windows = False

  # When to show tab bar
  # Type - String
  # Values - always    -> Always show tab bar
  #          never     -> Always hide tab bar
  #          multuple  -> Hide tab bar if only one tab open
  #          switching -> Show tab bar when switching tabs
  c.tabs.show = 'multiple'

  # Behaviour on last closed tab
  # Type - String
  # Values - ignore       -> Do nothing
  #          blank        -> Load blank page
  #          startpage    -> Load start page
  #          default-page -> Load default page
  #          close        -> Close window
  c.tabs.last_close = 'close'

  # Auto save session
  # Type - Bool
  c.auto_save.session = True

  # Enable smooth scrolling
  # Type - Bool
  c.scrolling.smooth = True

  # Load a restored tab as soon as it takes focus.
  # Type - Bool
  c.session.lazy_restore = True

  ################################################################################
  # FONTS AND THEMES
  ################################################################################

  # Font family for standard fonts
  # Type - FontFamily
  c.fonts.web.family.standard = 'Noto Sans'

  # Font family for serif fonts
  # Type - FontFamily
  c.fonts.web.family.serif = 'Noto Serif'

  # Font family for sans-serif fonts.
  # Type: FontFamily
  c.fonts.web.family.sans_serif = 'Noto Sans'

  # Font family for fixed fonts.
  # Type: FontFamily
  c.fonts.web.family.fixed = 'Fira Code'

  # Font used for hints
  # Type - Font
  c.fonts.hints = 'bold 12pt monospace'

  # Font used in statusbar
  # Type - Font
  c.fonts.statusbar = '12pt Cantarell'

  # Render web contents using dark theme
  # Type - Bool
  c.colors.webpage.darkmode.enabled = False

  # Which images to apply dark mode to
  # Type - String
  # Values - always -> Apply dark mode filter to all images
  #          never  -> Never apply dark mode filter to any images
  #          smart  -> Apply dark mode based on image content
  c.colors.webpage.darkmode.policy.images = 'never'

  # Background color for webpages
  # Type - QtColor
  # c.colors.webpage.bg = 'black'

  # Value to use for `prefers-color-scheme' for websites
  # Type - String
  # Values - auto  -> Use the system-wide color scheme setting
  #          dark  -> Force a dark theme
  #          light -> Force a light theme
  # c.colors.webpage.preferred_color_scheme = 'dark'

  ################################################################################
  # EDITING
  ################################################################################

  # Automatically turn on insert mode when a loaded page focuses a text field
  # Type - Bool
  c.input.insert_mode.auto_load = True

  # Edit fields in Emacs with Ctrl+E
  # Type - ShellCommand
  c.editor.command = ["emacsclient", "+{line}:{column}", "{file}"]

  ################################################################################
  # CONTENT VIEWING
  ################################################################################

  # Allow pdf.js to view PDF files in browser
  # Type - Bool
  c.content.pdfjs = False

  # Autoplay video elements
  # Type - Bool
  c.content.autoplay = False

  ################################################################################
  # ADBLOCKING - TODO
  ################################################################################
  # sys.path.append(os.path.join(sys.path[0], 'jmatrix'))
  # config.source("jmatrix/jmatrix/integrations/qutebrowser.py")
  # c.content.blocking.enabled = True
  # c.content.blocking.method = "auto"
  # c.content.blocking.adblock.lists = [
  #     'https://easylist.to/easylist/easylist.txt',
  #     'https://easylist.to/easylist/easyprivacy.txt',
  #     'https://easylist.to/easylist/fanboy-annoyance.txt',
  #     'https://easylist-downloads.adblockplus.org/abp-filters-anti-cv.txt',
  #     'https://secure.fanboy.co.nz/fanboy-annoyance.txt',
  #     'https://secure.fanboy.co.nz/fanboy-cookiemonster.txt',
  #     'https://github.com/uBlockOrigin/uAssets/raw/master/filters/legacy.txt',
  #     'https://github.com/uBlockOrigin/uAssets/raw/master/filters/filters.txt',
  #     'https://github.com/uBlockOrigin/uAssets/raw/master/filters/annoyances.txt',
  #     'https://github.com/uBlockOrigin/uAssets/raw/master/filters/badware.txt',
  #     'https://github.com/uBlockOrigin/uAssets/raw/master/filters/privacy.txt',
  #     'https://github.com/uBlockOrigin/uAssets/raw/master/filters/resource-abuse.txt',
  #     'https://github.com/uBlockOrigin/uAssets/raw/master/filters/unbreak.txt'
  #     'https://github.com/uBlockOrigin/uAssets/raw/master/filters/badlists.txt',
  #     'https://github.com/uBlockOrigin/uAssets/raw/master/filters/filters-2020.txt',
  #     'https://github.com/uBlockOrigin/uAssets/raw/master/filters/filters-2021.txt',
  #     'https://www.malwaredomainlist.com/hostslist/hosts.txt',
  #     'https://www.i-dont-care-about-cookies.eu/abp/',
  #     'https://pgl.yoyo.org/adservers/serverlist.php?showintro=0;hostformat=hosts',
  #     'https://pgl.yoyo.org/adservers/serverlist.php?hostformat=hosts&showintro=1&mimetype=plaintext'
  # ]

  ################################################################################
  # KEYBINDINGS
  ################################################################################

  ## Normal mode ##
  config.bind('J', 'tab-prev')
  config.bind('K', 'tab-next')
  config.unbind('d') # Don't close tab on lower-case 'd'
  config.bind('yy', 'yank')
  config.bind(',m', 'spawn mpv {url}')
  config.bind(',M', 'hint links spawn mpv {hint-url}')

  ## Command mode ##
  config.bind('<ctrl-g>', 'mode-leave', mode='command')
  config.bind('<ctrl-j>', 'completion-item-focus --history next', mode='command')
  config.bind('<ctrl-k>', 'completion-item-focus --history prev', mode='command')

  ## Hint mode ##
  config.bind('<Ctrl-g>', 'mode-leave', mode='hint')

  ## Insert mode ##
  config.bind('<ctrl-g>', 'mode-leave', mode='insert')

  ## Prompt mode ##
  config.bind('<ctrl-g>', 'mode-leave', mode='prompt')
  config.bind('<ctrl-j>', 'prompt-item-focus next', mode='prompt')
  config.bind('<ctrl-k>', 'prompt-item-focus prev', mode='prompt')
  config.unbind('<Tab>', mode='prompt')

  ################################################################################
  # MISC
  ################################################################################

  # Additional arguments to pass to Qt, without leading '--'
  # Type - List of String
  c.qt.args = ['disable-seccomp-filter-sandbox'] # Fix rendering issue

  # Load the autoconfig file (quteconfig.py)
  config.load_autoconfig()

#+end_src

*Relevant bookmarks*

#+begin_src conf :tangle ~/.dotfiles/.config/qutebrowser/quickmarks

  gn https://github.com/notifications
  jp https://www.tofugu.com/learn-japanese/
  kana https://realkana.com/
  dot https://github.com/phil-gab99/dotfiles
  ddg https://duckduckgo.com/?q
  gh https://github.com
  bh https://biblehub.com
  yt https://youtube.com
  st https://studium.umontreal.ca/my/index.php
  sc https://academique-dmz.synchro.umontreal.ca
  cups http://localhost:631
  sync http://localhost:8384
  fb https://www.facebook.com/philippe.gabriel99
  li https://www.linkedin.com/in/philippe-gabriel-52b945149
  rbc https://secure.royalbank.com/statics/login-service-ui/index#/full/signin?LANGUAGE=ENGLISH
  ctfs https://www.ctfs.com/content/dash/en/private/Summary.html
  naruto https://www18.naruspot.tv
  ygo https://ww1.kissanime.so/info/yugioh-go-rush
  op https://ww1.kissanime.so/info/one-piece
  mal https://myanimelist.net/animelist/Ramenphile
  whatsapp https://web.whatsapp.com
  amazon https://www.amazon.ca
  msdesk http://mydesk.morganstanley.com
  ta https://www.synchro.umontreal.ca/psc/upprpr9/EMPLOYEE/EMPL/c/NUI_FRAMEWORK.PT_LANDINGPAGE.GBL
  tax https://turbotax.intuit.ca/tax/software
  timer https://fullscreentimer.com/
  movies https://movie-web.app/search/movie
  concordia https://www.concordia.ca/
  tanguay https://oam.fairstone.ca/en/home

#+end_src

*JMatrix Rules*

#+begin_src conf :tangle ~/.dotfiles/.config/qutebrowser/jmatrix-rules

  # WARNING: This file can be overwritten easily with the :jmatrix-write-rules command
  # When data is overwritten, formatting and comments will be lost.
  # Please exercise caution when editing this file directly, and make sure to keep backups.
  # * cookie css image media script xhr frame other

  https-strict: behind-the-scene false
  matrix-off: about-scheme true
  matrix-off: behind-the-scene true
  matrix-off: chrome-extension-scheme true
  matrix-off: chrome-scheme true
  matrix-off: moz-extension-scheme true
  matrix-off: opera-scheme true
  matrix-off: vivaldi-scheme true
  matrix-off: wyciwyg-scheme true
  matrix-off: qute-scheme true
  noscript-spoof: * true
  referrer-spoof: * true
  referrer-spoof: behind-the-scene false
  * * * block
  * * css allow
  * * frame block
  * * image allow
  * 1st-party * allow
  * 1st-party frame allow

  # Github
  github.com * script allow

  # Youtube
  # youtube.com rr1---sn-t0a7sn7d.googlevideo.com xhr block
  # youtube.com rr1---sn-8qu-t0a6.googlevideo.com xhr block
  # youtube.com rr1---sn-8qu-t0ak.googlevideo.com xhr block
  # youtube.com rr1---sn-t0a7ln7d.googlevideo.com xhr block
  youtube.com rr1---sn-8qu-t0aee.googlevideo.com image block
  youtube.com rr1---sn-8qu-t0aee.googlevideo.com xhr block
  youtube.com rr1---sn-8qu-t0ak.googlevideo.com image block
  youtube.com rr1---sn-8qu-t0a6.googlevideo.com image block
  youtube.com rr2---sn-8qu-t0aee.googlevideo.com xhr block
  youtube.com rr2---sn-t0a7sn7d.googlevideo.com xhr block
  youtube.com rr3---sn-t0a7ln7d.googlevideo.com xhr block
  youtube.com rr3---sn-t0a7sn7d.googlevideo.com xhr block
  youtube.com rr3---sn-8qu-t0aee.googlevideo.com xhr block
  youtube.com rr3---sn-8qu-t0aee.googlevideo.com image block
  # youtube.com rr3---sn-t0a7sn7d.googlevideo.com xhr block
  youtube.com rr4---sn-vgqsknll.googlevideo.com xhr block
  youtube.com rr4---sn-8qu-t0ak.googlevideo.com xhr block
  youtube.com rr4---sn-8qu-t0ay.googlevideo.com xhr block
  youtube.com rr4---sn-8qu-t0ak.googlevideo.com image block
  youtube.com rr4---sn-8qu-t0ay.googlevideo.com image block
  youtube.com rr4---sn-t0a7ln7d.googlevideo.com xhr block
  youtube.com r5---sn-8qu-t0ay.googlevideo.com other block
  youtube.com rr5---sn-t0a7sn7d.googlevideo.com xhr block
  youtube.com rr5---sn-t0a7ln7d.googlevideo.com xhr block
  youtube.com rr5---sn-vgqsrnz7.googlevideo.com xhr block
  youtube.com rr6---sn-8qu-t0ay.googlevideo.com xhr block
  youtube.com rr6---sn-8qu-t0a6.googlevideo.com xhr block
  youtube.com rr7---sn-8qu-t0a6.googlevideo.com xhr block
  youtube.com rr7---sn-8qu-t0ay.googlevideo.com image block
  youtube.com rr7---sn-8qu-t0ay.googlevideo.com xhr block
  youtube.com rr7---sn-8qu-t0a6.googlevideo.com image block
  youtube.com r8---sn-8qu-t0a6.googlevideo.com other allow
  youtube.com rr8---sn-8qu-t0ak.googlevideo.com xhr block
  youtube.com rr8---sn-8qu-t0ak.googlevideo.com image block
  youtube.com rr8---sn-8qu-t0a6.googlevideo.com xhr block
  # youtube.com yt3.ggpht.com image block
  youtube.com tpc.googlesyndication.com image block
  youtube.com tpc.googlesyndication.com script block
  # youtube.com googleads.g.doubleclick.net image block
  # youtube.com googleads.g.doubleclick.net xhr block
  youtube.com jnn-pa.googleapis.com xhr allow
  youtube.com static.doubleclick.net script allow
  youtube.com www.googleadservices.com * block
  youtube.com lh6.googleusercontent.com image block
  # youtube.com fonts.googleapis.com css block
  youtube.com fonts.gstatic.com other allow
  youtube.com lh4.googleusercontent.com image block
  # youtube.com www.gstatic.com image block
  youtube.com www.gstatic.com script allow
  youtube.com www.gstatic.com xhr allow
  youtube.com play.google.com xhr allow
  youtube.com www.google.com script allow
  # youtube.com www.google.com image block
  # youtube.com www.google.ca image block
  youtube.com googlevideo.com xhr allow
  youtube.com s.ytimg.com script allow
  youtube.com s.ytimg.com xhr allow
  youtube.com i.ytimg.com other allow
  youtube.com suggestqueries-clients6.youtube.com script block
  youtube.com ad.doubleclick.net

  # Google
  google.com content.googleapis.com frame allow
  google.com content.googleapis.com script allow
  google.com ssl.gstatic.com media allow
  google.com ssl.gstatic.com script allow
  google.com ssl.gstatic.com xhr allow
  google.com translate.googleapis.com script allow
  google.com translate.googleapis.com xhr allow
  google.com translate.googleusercontent.com frame allow
  google.com translate.googleusercontent.com script allow
  google.com www.gstatic.com script allow
  google.com www.gstatic.com xhr allow

  # System Crafters
  systemcrafters.cc * * allow
  systemcrafters.net * * allow

  # 9anime
  9anime.st * media allow
  9anime.st * xhr allow
  9anime.st * script allow
  9anime.st * frame allow
  9anime.st * css allow
  9anime.st player.min.js * block
  9anime.st descendantmystery.com * block
  # 9anime.st toglooman.com script block
  # 9anime.st dozubatan.cpm script block
  9anime.st 3rd-party * block
  9anime.st outoctillerytor.com * block
  9anime.st pijmdswtxtcg.com * block
  9anime.st el.risingbelouke.com * block
  9anime.st thaudray.com * block
  9anime.st tzegilo.com * block
  9anime.st lc.impavidcircean.com * block
  # 9anime.st gogohd.net * block
  # 9anime.st ssl.p.jwpcdn.com * block
  # 9anime.st ld.heartedicefall.com * block
  9anime.st waust.at * block
  9anime.st whos.amung.us * block
  9anime.st rlxkmkyrvqt.com xhr block 
  9anime.st my.rtmark.net xhr block
  9anime.st offerimage.com xhr block
  9anime.st rlxkmkyrvqt.com frame block
  9anime.st v10.bunnycdn.se frame block
  # 9anime.st v11.bunnycdn.se frame block
  9anime.st offerimage.com image block
  9anime.st inpage-push.com * block
  9anime.st anicli.click xhr block
  # 9anime.st goload.pro * block
  9anime.st api.movcloud.net script block
  9anime.st v6.bunnycdn.se frame block
  9anime.st delivery.taroads.com xhr block
  # 9anime.st ssl.p.jwpcdn.com script block
  9anime.st dmbinqebajoeca.com xhr block
  9anime.st zikroarg.com script block

  # Narutospot.tv
  naruspot.tv * frame allow
  naruspot.tv * script allow
  naruspot.tv * media allow

  # My Anime List
  myanimelist.net google.com script allow

  # Studium
  matrix-off: udemontreal-my.share true
  matrix-off: studium.umontreal.ca true
  # udemontreal-my.sharepoint.com * * allow
  # udemontreal-my.sharepoint.com odspserviceworkerproxy.aspx script allow
  # udemontreal-my.sharepoint.com res-1.cdn.office.net script allow
  # udemontreal-my.sharepoint.com res-2.cdn.office.net script allow
  # udemontreal-my.sharepoint.com res-2.cdn.office.net xhr allow
  # udemontreal-my.sharepoint.com res-2.cdn.office.net other allow
  # udemontreal-my.sharepoint.com browser.pipe.aria.microsoft.com script allow
  # udemontreal-my.sharepoint.com browser.pipe.aria.microsoft.com xhr allow
  # udemontreal-my.sharepoint.com cac-word-view.officeapps.live.com frame allow
  # udemontreal-my.sharepoint.com cac-word-view.officeapps.live.com xhr allow
  # udemontreal-my.sharepoint.com canadaeast1-mediap.svc.ms xhr allow
  # udemontreal-my.sharepoint.com static2.sharepointonline.com other allow
  # udemontreal-my.sharepoint.com ocws.officeapps.live.com xhr allow
  # udemontreal-my.sharepoint.com statica.akamai.odsp.cdn.office.net script allow
  # udemontreal-my.sharepoint.com graph.microsoft.com xhr allow
  # udemontreal-my.sharepoint.com login.windows.net frame allow
  # udemontreal-my.sharepoint.com clh-word-view-15.cdn.office.net script allow
  # udemontreal-my.sharepoint.com chromewebdata script allow
  # udemontreal-my.sharepoint.com udemontreal-my.sharepoint.com script allow

  # Facebook
  facebook.com static.xx.fbcdn.net script allow

  # amazon.com
  amazon.ca m.media-amazon.com other allow
  amazon.ca m.media-amazon.com xhr allow
  amazon.ca m.media-amazon.com script allow
  amazon.ca m.media-amazon.com media allow
  amazon.ca images-na.ssl-images-amazon.com other allow
  amazon.ca images-na.ssl-images-amazon.com script allow

  # LinkedIn
  linkedin.com * script allow
  linkedin.com * media allow
  linkedin.com * image allow
  linkedin.com * xhr allow

  # CodeBoot
  codeboot.org * * allow

#+end_src

*** Conda Configuration

**** Conda Initialization

#+begin_src conf :tangle ~/.dotfiles/.condarc

  changeps1: False

#+end_src

*** Dunst

#+begin_src conf :tangle ~/.dotfiles/.config/dunst/dunstrc :shebang ### -*- conf -*-

  [global]
  ### Display ###
  monitor = 0

  # The geometry of the window:
  #   [{width}]x{height}[+/-{x}+/-{y}]
  geometry = "250x10-10+50"

  # Show how many messages are currently hidden (because of geometry).
  indicate_hidden = yes

  # Shrink window if it's smaller than the width.  Will be ignored if
  # width is 0.
  shrink = no

  # The transparency of the window.  Range: [0; 100].
  transparency = 10

  # The height of the entire notification.  If the height is smaller
  # than the font height and padding combined, it will be raised
  # to the font height and padding.
  notification_height = 0

  # Draw a line of "separator_height" pixel height between two
  # notifications.
  # Set to 0 to disable.
  separator_height = 1
  separator_color = frame

  # Padding between text and separator.
  padding = 8

  # Horizontal padding.
  horizontal_padding = 8

  # Defines width in pixels of frame around the notification window.
  # Set to 0 to disable.
  frame_width = 2

  # Defines color of the frame around the notification window.
  frame_color = "#89aaeb"

  # Sort messages by urgency.
  sort = yes

  # Don't remove messages, if the user is idle (no mouse or keyboard input)
  # for longer than idle_threshold seconds.
  idle_threshold = 60

  ### Text ###

  font = Cantarell 16

  # The spacing between lines.  If the height is smaller than the
  # font height, it will get raised to the font height.
  line_height = 0
  markup = full

  # The format of the message.  Possible variables are:
  #   %a  appname
  #   %s  summary
  #   %b  body
  #   %i  iconname (including its path)
  #   %I  iconname (without its path)
  #   %p  progress value if set ([  0%] to [100%]) or nothing
  #   %n  progress value if set without any extra characters
  #   %%  Literal %
  # Markup is allowed
  format = "<b>%s</b>\n%b"

  # Alignment of message text.
  # Possible values are "left", "center" and "right".
  alignment = left

  # Show age of message if message is older than show_age_threshold
  # seconds.
  # Set to -1 to disable.
  show_age_threshold = 60

  # Split notifications into multiple lines if they don't fit into
  # geometry.
  word_wrap = yes

  # When word_wrap is set to no, specify where to make an ellipsis in long lines.
  # Possible values are "start", "middle" and "end".
  ellipsize = middle

  # Ignore newlines '\n' in notifications.
  ignore_newline = no

  # Stack together notifications with the same content
  stack_duplicates = true

  # Hide the count of stacked notifications with the same content
  hide_duplicate_count = false

  # Display indicators for URLs (U) and actions (A).
  show_indicators = yes

  ### Icons ###

  # Align icons left/right/off
  icon_position = left

  # Scale larger icons down to this size, set to 0 to disable
  max_icon_size = 88

  # Paths to default icons.
  icon_path = /home/phil-gab99/.guix-extra-profiles/themes-fonts/themes-fonts/share/icons/Papirus/48x48@2x/status:/home/phil-gab99/.guix-extra-profiles/themes-fonts/themes-fonts/share/icons/Papirus/128x128/devices:/home/phil-gab99/.guix-extra-profiles/themes-fonts/themes-fonts/share/icons/Papirus/48x48@2x/emblems:/home/phil-gab99/.guix-extra-profiles/themes-fonts/themes-fonts/share/icons/Papirus/24x24@2x/panel

  ### History ###

  # Should a notification popped up from history be sticky or timeout
  # as if it would normally do.
  sticky_history = no

  # Maximum amount of notifications kept in history
  history_length = 20

  ### Misc/Advanced ###

  # Browser for opening urls in context menu.
  browser = qutebrowser

  # Always run rule-defined scripts, even if the notification is suppressed
  always_run_script = true

  # Define the title of the windows spawned by dunst
  title = Dunst

  # Define the class of the windows spawned by dunst
  class = Dunst

  startup_notification = false
  verbosity = mesg

  # Define the corner radius of the notification window
  # in pixel size. If the radius is 0, you have no rounded
  # corners.
  # The radius will be automatically lowered if it exceeds half of the
  # notification height to avoid clipping text and/or icons.
  corner_radius = 4

  mouse_left_click = close_current
  mouse_middle_click = do_action
  mouse_right_click = close_all

  # Experimental features that may or may not work correctly. Do not expect them
  # to have a consistent behaviour across releases.
  [experimental]
  # Calculate the dpi to use on a per-monitor basis.
  # If this setting is enabled the Xft.dpi value will be ignored and instead
  # dunst will attempt to calculate an appropriate dpi value for each monitor
  # using the resolution and physical size. This might be useful in setups
  # where there are multiple screens with very different dpi values.
  per_monitor_dpi = false

  [shortcuts]

  # Shortcuts are specified as [modifier+][modifier+]...key
  # Available modifiers are "ctrl", "mod1" (the alt-key), "mod2",
  # "mod3" and "mod4" (windows-key).
  # Xev might be helpful to find names for keys.

  # Close notification.
  # close = ctrl+space

  # Close all notifications.
  # close_all = ctrl+shift+space

  # Redisplay last message(s).
  # On the US keyboard layout "grave" is normally above TAB and left
  # of "1". Make sure this key actually exists on your keyboard layout,
  # e.g. check output of 'xmodmap -pke'
  # history = mod4+n

  # Context menu.
  # context = ctrl+shift+period

  [urgency_low]
  # IMPORTANT: colors have to be defined in quotation marks.
  # Otherwise the "#" and following would be interpreted as a comment.
  background = "#11bdbd"
  foreground = "#ffffff"
  timeout = 10
  # Icon for notifications with low urgency, uncomment to enable
  #icon = /path/to/icon

  [urgency_normal]
  background = "#1c1f26"
  foreground = "#ffffff"
  timeout = 10
  # Icon for notifications with normal urgency, uncomment to enable
  #icon = /path/to/icon

  [urgency_critical]
  background = "#900000"
  foreground = "#ffffff"
  frame_color = "#ff0000"
  timeout = 10
  # Icon for notifications with critical urgency, uncomment to enable
  #icon = /path/to/icon

#+end_src

*** Fontconfig

Make sure Emacs can find the font path from the ~themes-fonts~ profile:

#+begin_src xml :tangle ~/.dotfiles/.config/fontconfig/fonts.conf

  <?xml version="1.0"?>
  <!DOCTYPE fontconfig SYSTEM "fonts.dtd">
  <fontconfig>
    <dir>~/.guix-extra-profiles/themes-fonts/themes-fonts/share/fonts</dir>
    <alias>
      <family>Apple Color Emoji</family>
      <prefer>
        <family>Noto Color Emoji</family>
      </prefer>
    </alias>
  </fontconfig>

#+end_src

*** General Profile

#+begin_src shell :tangle ~/.dotfiles/.profile

  ################################################################################
  # Loading profiles/environments
  ################################################################################

  # Load the default Guix profile
  GUIX_PROFILE="$HOME/.guix-profile"
  . "$GUIX_PROFILE"/etc/profile

  # Load additional Guix profiles
  export GUIX_EXTRA_PROFILES=$HOME/.guix-extra-profiles
  for i in $GUIX_EXTRA_PROFILES/*; do
      profile=$i/$(basename "$i")
      if [ -f "$profile"/etc/profile ]; then
          GUIX_PROFILE="$profile"
          . "$GUIX_PROFILE"/etc/profile
      fi
      unset profile
  done

  unset i

  # Load Nix environment
  if [ -f /run/current-system/profile/etc/profile.d/nix.sh ]; then
      . /run/current-system/profile/etc/profile.d/nix.sh
  fi

  ################################################################################
  # Path variables
  ################################################################################

  paths=(
      # Make user scripts and other executables visible to Path
      "$HOME/bin"
      "$HOME/Packages"

      # Make npm apps visible to Path
      "$HOME/.npm/bin"

      # Make Nix apps visible to Path
      "$HOME/.nix-profile/bin"
  )
  for p in ${paths[@]}; do
      PATH="$PATH:$p"
  done
  export PATH

  # Append libraries from Nix user packages to library path
  export LIBRARY_PATH="$LIBRARY_PATH:$HOME/.nix-profile/lib"

  # Append LD libraries for shared objects libraries
  paths=(
      "/run/current-system/profile/lib"
      "$GUIX_EXTRA_PROFILES/build-tools/build-tools/lib"
  )
  for p in ${paths[@]}; do
      LD_LIBRARY_PATH="${LD_LIBRARY_PATH:+$LD_LIBRARY_PATH:}$p"
  done
  export LD_LIBRARY_PATH

  paths=(
      # Make Flatpak apps visible to launcher
      "$HOME/.local/share/flatpak/exports/share"

      # Make Nix apps visible to launcher and Path
      "$HOME/.nix-profile/share"

      # Make applications in other profiles visible to launcher
      "$GUIX_EXTRA_PROFILES/audio/audio/share"
      "$GUIX_EXTRA_PROFILES/browsers/browsers/share"
      "$GUIX_EXTRA_PROFILES/game-dev/game-dev/share"
      "$GUIX_EXTRA_PROFILES/latex/latex/share"
      "$GUIX_EXTRA_PROFILES/media/media/share"
      "$GUIX_EXTRA_PROFILES/themes-fonts/themes-fonts/share"
  )
  for p in ${paths[@]}; do
      XDG_DATA_DIRS="$XDG_DATA_DIRS:$p"
  done
  export XDG_DATA_DIRS

  # Some scripts make use of path to config directory
  export XDG_CONFIG_HOME="$HOME/.config"

  # Some script make use of path to cache directory
  export XDG_CACHE_HOME="$HOME/.cache"

  paths=(
      # Make manual pages in other profiles visible   
      "$GUIX_EXTRA_PROFILES/audio/audio/share/man"
      "$GUIX_EXTRA_PROFILES/browsers/browsers/share/man"
      "$GUIX_EXTRA_PROFILES/build-tools/build-tools/share/man"
      "$GUIX_EXTRA_PROFILES/cc/cc/share/man"
      "$GUIX_EXTRA_PROFILES/desktop/desktop/share/man"
      "$GUIX_EXTRA_PROFILES/emacs/emacs/share/man"
      "$GUIX_EXTRA_PROFILES/java/java/share/man"
      "$GUIX_EXTRA_PROFILES/latex/latex/share/man"
      "$GUIX_EXTRA_PROFILES/media/media/share/man"
      "$GUIX_EXTRA_PROFILES/perl/perl/share/man"
      "$GUIX_EXTRA_PROFILES/prolog/prolog/share/man"
      "$GUIX_EXTRA_PROFILES/python/python/share/man"
      "$GUIX_EXTRA_PROFILES/themes-fonts/themes-fonts/share/man"
      "$GUIX_EXTRA_PROFILES/video/video/share/man"
  )
  for p in ${paths[@]}; do
      MANPATH="$MANPATH:$p"
  done
  export MANPATH

  paths=(
      # Make info nodes in other profiles visible
      "$GUIX_EXTRA_PROFILES/audio/audio/share/info"
      "$GUIX_EXTRA_PROFILES/browsers/browsers/share/info"
      "$GUIX_EXTRA_PROFILES/build-tools/build-tools/share/info"
      "$GUIX_EXTRA_PROFILES/cc/cc/share/info"
      "$GUIX_EXTRA_PROFILES/desktop/desktop/share/info"
      "$GUIX_EXTRA_PROFILES/emacs/emacs/share/info"
      "$GUIX_EXTRA_PROFILES/java/java/share/info"
      "$GUIX_EXTRA_PROFILES/latex/latex/share/info"
      "$GUIX_EXTRA_PROFILES/media/media/share/info"
      "$GUIX_EXTRA_PROFILES/python/python/share/info"
      "$GUIX_EXTRA_PROFILES/themes-fonts/themes-fonts/share/info"
      "$GUIX_EXTRA_PROFILES/video/video/share/info"                 
  )
  for p in ${paths[@]}; do
      INFOPATH="$INFOPATH:$p"
  done
  export MANPATH

  unset p paths

  ################################################################################
  # Configuration variables
  ################################################################################

  # Don't use the system-wide PulseAudio configuration
  unset PULSE_CONFIG PULSE_CLIENTCONFIG

  # Export java path so that tools pick it up correctly
  export JAVA_HOME=$(realpath $(dirname $(dirname $(which java))))

  # Arduino home directory
  export ARDUINO_HOME="$HOME/.local/share/flatpak/app/cc.arduino.arduinoide/current/active/files/Arduino"

  # Export casting program for qutebrowser
  export QUTE_CAST_YTDL_PROGRAM="youtube-dl"

  # Make sure we can reach the GPG agent for SSH auth
  export SSH_AUTH_SOCK="$(gpgconf --list-dirs agent-ssh-socket)"

  # Make sure `ls` collates dotfiles first (for dired)
  export LC_COLLATE="C"

  # Many build scripts expect CC to contain the compiler command
  export CC="gcc"

  # Jupyter config file
  export JUPYTER_CONFIG_DIR=$XDG_CONFIG_HOME/jupyter

  # We're in Emacs
  export VISUAL=emacsclient
  export EDITOR="$VISUAL"

  # Less specific variables
  export LESSHISTFILE=$XDG_CACHE_HOME/.lesshst

  # Guile specific variables
  export GUILE_HISTORY=$XDG_CACHE_HOME/.guile_history

  # Python specific variables
  export PYTHONSTARTUP=$XDG_CONFIG_HOME/python/history.py
  # [[ -v PYTHONPATH ]] \
      #     && export PYTHONPATH="$PYTHONPATH:$HOME/.nix-profile/lib/python3.9/site-packages" \
      #         || export PYTHONPATH="$HOME/.nix-profile/lib/python3.9/site-packages"

  # Prolog specific variables
  export LOCALSZ=32768

  # Bash specific variables
  export HISTFILE=$XDG_CACHE_HOME/.bash_history

  # Email address
  export EMAIL=pgabriel999@hotmail.com

  ################################################################################
  # Shepherd
  ################################################################################

  # Start the shepherd daemon
  if [[ ! -S ${XDG_RUNTIME_DIR-$HOME/.cache}/shepherd/socket ]]; then
      shepherd # -l $XDG_CONFIG_HOME/shepherd/shepherd.log
  fi

  ################################################################################
  # Loading scripts
  ################################################################################

  # System 76 charge thresholds set to safe charge
  [ -f ~/bin/safe-charge ] && ~/bin/safe-charge

  # Load .bashrc to get login environment
  [ -f ~/.bashrc ] && . ~/.bashrc

#+end_src

*** Git Profile

#+begin_src conf :tangle ~/.dotfiles/.gitconfig

  [user]
          name = Philippe Gabriel
          email = pgabriel999@hotmail.com
  [github]
          user = phil-gab99

#+end_src

*** Guile Repl

#+begin_src scheme :tangle ~/.dotfiles/.guile :shebang ;; -*- scheme -*-

  (use-modules (ice-9 readline)
               (ice-9 colorized))

  (activate-readline)
  (activate-colorized)

#+end_src

*** isync

After having setup the file, make sure to run the following commands:
- ~mu init --maildir=~/Mail --my-address=address1@domain1.com --my-address=address2@domain2.com ...~ - For all different addresses
- ~mu index~ - To index the given addresses

#+begin_src conf :tangle ~/.dotfiles/.mbsyncrc

  # Main hotmail account
  IMAPAccount hotmail
  Host outlook.office365.com
  User pgabriel999@hotmail.com
  Port 993
  PassCmd "emacsclient -e \"(pg/lookup-password :host \\\"hotmail.com\\\" :user \\\"pgabriel999\\\")\" | cut -d '\"' -f2"
  SSLType IMAPS
  CertificateFile /etc/ssl/certs/ca-certificates.crt

  IMAPStore hotmail-remote
  Account hotmail

  MaildirStore hotmail-local
  Subfolders Verbatim
  Path /home/phil-gab99/Mail/Main/
  Inbox /home/phil-gab99/Mail/Main/Inbox

  Channel hotmail
  Far :hotmail-remote:
  Near :hotmail-local:
  Patterns *
  CopyArrivalDate yes
  Create Both
  Expunge Both
  SyncState *

  # University account
  # IMAPAccount umontreal
  # Host outlook.office365.com
  # User philippe.gabriel.1@umontreal.ca
  # Port 993
  # PassCmd oauth2ms
  # SSLType IMAPS
  # AuthMechs XOAUTH2
  # CertificateFile /etc/ssl/certs/ca-certificates.crt

  # IMAPStore umontreal-remote
  # Account umontreal

  # MaildirStore umontreal-local
  # SubFolders Verbatim
  # Path /home/phil-gab99/Mail/University/
  # Inbox /home/phil-gab99/Mail/University/Inbox

  # Channel umontreal
  # Far :umontreal-remote:
  # Near :umontreal-local:
  # Patterns *
  # CopyArrivalDate yes
  # Create Both
  # Expunge Both
  # SyncState *

#+end_src

*** Mimeapps

#+begin_src conf :tangle ~/.dotfiles/.config/mimeapps.list

  [Default Applications]
  text/html=qutebrowser.desktop
  x-scheme-handler/http=org.qutebrowser.qutebrowser.desktop
  x-scheme-handler/https=org.qutebrowser.qutebrowser.desktop
  x-scheme-handler/about=org.qutebrowser.qutebrowser.desktop
  x-scheme-handler/unknown=org.qutebrowser.qutebrowser.desktop
  application/xhtml+xml=org.qutebrowser.qutebrowser.desktop

  [Added Associations]
  x-scheme-handler/http=org.qutebrowser.qutebrowser.desktop;
  text/html=org.qutebrowser.qutebrowser.desktop;
  application/xhtml+xml=org.qutebrowser.qutebrowser.desktop;
  x-scheme-handler/https=org.qutebrowser.qutebrowser.desktop;

#+end_src

*** Mpd Configuration

#+begin_src conf :tangle ~/.dotfiles/.config/mpd/mpd.conf

  # An example configuration file for MPD.
  # Read the user manual for documentation: http://www.musicpd.org/doc/user/
  # or /usr/share/doc/mpd/html/user.html
  
  
  # Files and directories #######################################################
  #
  # This setting controls the top directory which MPD will search to discover the
  # available audio files and add them to the daemon's online database. This
  # setting defaults to the XDG directory, otherwise the music directory will be
  # be disabled and audio files will only be accepted over ipc socket (using
  # file:// protocol) or streaming files over an accepted protocol.
  
  music_directory		"/home/phil-gab99/Music"
  
  # This setting sets the MPD internal playlist directory. The purpose of this
  # directory is storage for playlists created by MPD. The server will use
  # playlist files not created by the server but only if they are in the MPD
  # format. This setting defaults to playlist saving being disabled.
  
  # playlist_directory		"/home/phil-gab99/Music/playlists"
  
  # This setting sets the location of the MPD database. This file is used to
  # load the database at server start up and store the database while the
  # server is not up. This setting defaults to disabled which will allow
  # MPD to accept files over ipc socket (using file:// protocol) or streaming
  # files over an accepted protocol.
  
  db_file			"/home/phil-gab99/.config/mpd/mpd.db"
  
  # These settings are the locations for the daemon log files for the daemon.
  # These logs are great for troubleshooting, depending on your log_level
  # settings.
  #
  # The special value "syslog" makes MPD use the local syslog daemon. This
  # setting defaults to logging to syslog, or to journal if mpd was started as
  # a systemd service.
  
  log_file			"/home/phil-gab99/.config/mpd/mpd.log"
  
  # This setting sets the location of the file which stores the process ID
  # for use of mpd --kill and some init scripts. This setting is disabled by
  # default and the pid file will not be stored.
  
  pid_file			"/home/phil-gab99/.config/mpd/mpd.pid"
  
  # This setting sets the location of the file which contains information about
  # most variables to get MPD back into the same general shape it was in before
  # it was brought down. This setting is disabled by default and the server
  # state will be reset on server start up.
  
  state_file			"/home/phil-gab99/.config/mpd/mpdstate"
  
  # The location of the sticker database.  This is a database which
  # manages dynamic information attached to songs.
  
  # sticker_file                   "/var/lib/mpd/sticker.sql"
  
  ###############################################################################
  
  
  # General music daemon options ################################################
  #
  # This setting specifies the user that MPD will run as. MPD should never run as
  # root and you may use this setting to make MPD change its user ID after
  # initialization. This setting is disabled by default and MPD is run as the
  # current user.
  
  # user				"mpd"
  
  # This setting specifies the group that MPD will run as. If not specified
  # primary group of user specified with "user" setting will be used (if set).
  # This is useful if MPD needs to be a member of group such as "audio" to
  # have permission to use sound card.
  
  # group                          "nogroup"
  
  # This setting sets the address for the daemon to listen on. Careful attention
  # should be paid if this is assigned to anything other then the default, any.
  # This setting can deny access to control of the daemon. Choose any if you want
  # to have mpd listen on every address. Not effective if systemd socket
  # activation is in use.
  
  # For network
  bind_to_address		"127.0.0.1"
  
  # And for Unix Socket
  # bind_to_address		"/run/mpd/socket"
  
  # This setting is the TCP port that is desired for the daemon to get assigned
  # to.
  
  port				"6600"
  
  # This setting controls the type of information which is logged. Available
  # setting arguments are "default", "secure" or "verbose". The "verbose" setting
  # argument is recommended for troubleshooting, though can quickly stretch
  # available resources on limited hardware storage.
  
  # log_level			"default"
  
  # Setting "restore_paused" to "yes" puts MPD into pause mode instead
  # of starting playback after startup.
  
  # restore_paused "no"
  
  # This setting enables MPD to create playlists in a format usable by other
  # music players.
  
  # save_absolute_paths_in_playlists	"no"
  
  # This setting defines a list of tag types that will be extracted during the
  # audio file discovery process. The complete list of possible values can be
  # found in the user manual.
  
  # metadata_to_use	"artist,album,title,track,name,genre,date,composer,performer,disc"
  
  # This example just enables the "comment" tag without disabling all
  # the other supported tags:
  
  # metadata_to_use "+comment"
  
  # This setting enables automatic update of MPD's database when files in
  # music_directory are changed.
  
  auto_update    "yes"
  
  # Limit the depth of the directories being watched, 0 means only watch
  # the music directory itself.  There is no limit by default.
  
  # auto_update_depth "3"
  
  ###############################################################################
  
  
  # Symbolic link behavior ######################################################
  #
  # If this setting is set to "yes", MPD will discover audio files by following
  # symbolic links outside of the configured music_directory.
  
  # follow_outside_symlinks	"yes"
  
  # If this setting is set to "yes", MPD will discover audio files by following
  # symbolic links inside of the configured music_directory.
  
  # follow_inside_symlinks		"yes"
  
  ###############################################################################
  
  
  # Zeroconf / Avahi Service Discovery ##########################################
  #
  # If this setting is set to "yes", service information will be published with
  # Zeroconf / Avahi.
  
  # zeroconf_enabled		"yes"
  
  # The argument to this setting will be the Zeroconf / Avahi unique name for
  # this MPD server on the network. %h will be replaced with the hostname.
  
  # zeroconf_name			"Music Player @ %h"
  
  ###############################################################################
  
  
  # Permissions #################################################################
  #
  # If this setting is set, MPD will require password authorization. The password
  # setting can be specified multiple times for different password profiles.
  
  # password                        "password@read,add,control,admin"
  
  # This setting specifies the permissions a user has who has not yet logged in.
  
  # default_permissions             "read,add,control,player,admin"
  
  ###############################################################################
  
  
  # Database #######################################################################
  #
  
  #database {
  #       plugin "proxy"
  #       host "other.mpd.host"
  #       port "6600"
  #}
  
  # Input #######################################################################
  #
  
  input {
          plugin "curl"
  #       proxy "proxy.isp.com:8080"
  #       proxy_user "user"
  #       proxy_password "password"
  }
  
  # QOBUZ input plugin
  input {
          enabled    "no"
          plugin     "qobuz"
  #        app_id     "ID"
  #        app_secret "SECRET"
  #        username   "USERNAME"
  #        password   "PASSWORD"
  #        format_id  "N"
  }
  
  # TIDAL input plugin
  input {
          enabled      "no"
          plugin       "tidal"
  #        token        "TOKEN"
  #        username     "USERNAME"
  #        password     "PASSWORD"
  #        audioquality "Q"
  }
  
  # Decoder #####################################################################
  #
  
  decoder {
          plugin                  "hybrid_dsd"
          enabled                 "no"
  #       gapless                 "no"
  }
  
  ###############################################################################
  
  # Audio Output ################################################################
  #
  # MPD supports various audio output types, as well as playing through multiple
  # audio outputs at the same time, through multiple audio_output settings
  # blocks. Setting this block is optional, though the server will only attempt
  # autodetection for one sound card.
  
  # An example of an ALSA output:
  
  # audio_output {
  # 	type		"alsa"
  # 	name		"My ALSA Device"
  #	device		"hw:0,0"	# optional
  #	mixer_type      "hardware"      # optional
  #	mixer_device	"default"	# optional
  #	mixer_control	"PCM"		# optional
  #	mixer_index	"0"		# optional
  # }
  
  # An example of an OSS output:
  
  # audio_output {
  #	type		"oss"
  #	name		"My OSS Device"
  #	device		"/dev/dsp"	# optional
  #	mixer_type      "hardware"      # optional
  #	mixer_device	"/dev/mixer"	# optional
  #	mixer_control	"PCM"		# optional
  # }
  
  # An example of a shout output (for streaming to Icecast):
  
  # audio_output {
  #	type		"shout"
  #	encoder		"vorbis"		# optional
  #	name		"My Shout Stream"
  #	host		"localhost"
  #	port		"8000"
  #	mount		"/mpd.ogg"
  #	password	"hackme"
  #	quality		"5.0"
  #	bitrate		"128"
  #	format		"44100:16:1"
  #	protocol	"icecast2"		# optional
  #	user		"source"		# optional
  #	description	"My Stream Description"	# optional
  #	url             "http://example.com"    # optional
  #	genre		"jazz"			# optional
  #	public		"no"			# optional
  #	timeout		"2"			# optional
  #	mixer_type      "software"              # optional
  # }
  
  # An example of a recorder output:
  
  # audio_output {
  #       type            "recorder"
  #       name            "My recorder"
  #       encoder         "vorbis"                # optional, vorbis or lame
  #       path            "/var/lib/mpd/recorder/mpd.ogg"
  #       quality         "5.0"                   # do not define if bitrate is defined
  #       bitrate         "128"                   # do not define if quality is defined
  #       format          "44100:16:1"
  # }
  
  # An example of a httpd output (built-in HTTP streaming server):
  
  # audio_output {
  #	type		"httpd"
  #	name		"My HTTP Stream"
  #	encoder		"vorbis"		# optional, vorbis or lame
  #	port		"8000"
  #	bind_to_address "0.0.0.0"               # optional, IPv4 or IPv6
  #	quality		"5.0"			# do not define if bitrate is defined
  #	bitrate		"128"			# do not define if quality is defined
  #	format		"44100:16:1"
  #	max_clients     "0"                     # optional 0=no limit
  # }
  
  # An example of a pulseaudio output (streaming to a remote pulseaudio server)
  # Please see README.Debian if you want mpd to play through the pulseaudio
  # daemon started as part of your graphical desktop session!
  
  audio_output {
  	type		"pulse"
  	name		"My Pulse Output"
  #	server		"remote_server"		# optional
  #	sink		"remote_server_sink"	# optional
  }
  
  # An example of a winmm output (Windows multimedia API).
  
  # audio_output {
  # 	type		"winmm"
  # 	name		"My WinMM output"
  #	device		"Digital Audio (S/PDIF) (High Definition Audio Device)" # optional
  #		or
  #	device		"0"		# optional
  #	mixer_type	"hardware"	# optional
  # }
  
  # An example of an openal output.
  
  # audio_output {
  #	type		"openal"
  #	name		"My OpenAL output"
  #	device		"Digital Audio (S/PDIF) (High Definition Audio Device)" # optional
  # }
  
  # Example "pipe" output:
  
  # audio_output {
  #	type		"pipe"
  #	name		"my pipe"
  #	command		"aplay -f cd 2>/dev/null"
  ## Or if you want to use AudioCompress
  #	command		"AudioCompress -m | aplay -f cd 2>/dev/null"
  ## Or to send raw PCM stream through PCM:
  #	command		"nc example.org 8765"
  #	format		"44100:16:2"
  # }
  
  # An example of a null output (for no audio output):
  
  # audio_output {
  #	type		"null"
  #	name		"My Null Output"
  #	mixer_type      "none"                  # optional
  # }
  
  ###############################################################################
  
  
  # Normalization automatic volume adjustments ##################################
  
  # This setting specifies the type of ReplayGain to use. This setting can have
  # the argument "off", "album", "track" or "auto". "auto" is a special mode that
  # chooses between "track" and "album" depending on the current state of
  # random playback. If random playback is enabled then "track" mode is used.
  # See <http://www.replaygain.org> for more details about ReplayGain.
  # This setting is off by default.
  
  #replaygain			"album"
  
  # This setting sets the pre-amp used for files that have ReplayGain tags. By
  # default this setting is disabled.
  
  # replaygain_preamp		"0"
  
  # This setting sets the pre-amp used for files that do NOT have ReplayGain tags.
  # By default this setting is disabled.
  
  # replaygain_missing_preamp	"0"
  
  # This setting enables or disables ReplayGain limiting.
  # MPD calculates actual amplification based on the ReplayGain tags
  # and replaygain_preamp / replaygain_missing_preamp setting.
  # If replaygain_limit is enabled MPD will never amplify audio signal
  # above its original level. If replaygain_limit is disabled such amplification
  # might occur. By default this setting is enabled.
  
  # replaygain_limit		"yes"
  #
  # This setting enables on-the-fly normalization volume adjustment. This will
  # result in the volume of all playing audio to be adjusted so the output has
  # equal "loudness". This setting is disabled by default.
  
  # volume_normalization		"no"
  
  ###############################################################################
  
  # Character Encoding ##########################################################
  
  # If file or directory names do not display correctly for your locale then you
  # may need to modify this setting.
  
  filesystem_charset		"UTF-8"
  
  ###############################################################################

#+end_src

*** Mpv Configuration

#+begin_src conf :tangle ~/.dotfiles/.config/mpv/mpv.conf

  # Example mpv configuration file
  #
  # Warning:
  #
  # The commented example options usually do _not_ set the default values. Call
  # mpv with --list-options to see the default values for most options. There is
  # no builtin or example mpv.conf with all the defaults.
  #
  #
  # Configuration files are read system-wide from /usr/local/etc/mpv.conf
  # and per-user from ~/.config/mpv/mpv.conf, where per-user settings override
  # system-wide settings, all of which are overridden by the command line.
  #
  # Configuration file settings and the command line options use the same
  # underlying mechanisms. Most options can be put into the configuration file
  # by dropping the preceding '--'. See the man page for a complete list of
  # options.
  #
  # Lines starting with '#' are comments and are ignored.
  #
  # See the CONFIGURATION FILES section in the man page
  # for a detailed description of the syntax.
  #
  # Profiles should be placed at the bottom of the configuration file to ensure
  # that settings wanted as defaults are not restricted to specific profiles.

  ##################
  # video settings #
  ##################

  # Start in fullscreen mode by default.
  fs=yes

  # force starting with centered window
  #geometry=50%:50%

  # don't allow a new window to have a size larger than 90% of the screen size
  #autofit-larger=90%x90%

  # Do not close the window on exit.
  #keep-open=yes

  # Do not wait with showing the video window until it has loaded. (This will
  # resize the window once video is loaded. Also always shows a window with
  # audio.)
  #force-window=immediate

  # Disable the On Screen Controller (OSC).
  #osc=no

  # Keep the player window on top of all other windows.
  #ontop=yes

  # Specify high quality video rendering preset (for --vo=gpu only)
  # Can cause performance problems with some drivers and GPUs.
  #profile=gpu-hq

  # Force video to lock on the display's refresh rate, and change video and audio
  # speed to some degree to ensure synchronous playback - can cause problems
  # with some drivers and desktop environments.
  #video-sync=display-resample

  # Enable hardware decoding if available. Often, this does not work with all
  # video outputs, but should work well with default settings on most systems.
  # If performance or energy usage is an issue, forcing the vdpau or vaapi VOs
  # may or may not help.
  #hwdec=auto

  ##################
  # audio settings #
  ##################

  # Specify default audio device. You can list devices with: --audio-device=help
  # The option takes the device string (the stuff between the '...').
  #audio-device=alsa/default

  # Do not filter audio to keep pitch when changing playback speed.
  #audio-pitch-correction=no

  # Output 5.1 audio natively, and upmix/downmix audio with a different format.
  #audio-channels=5.1
  # Disable any automatic remix, _if_ the audio output accepts the audio format.
  # of the currently played file. See caveats mentioned in the manpage.
  # (The default is "auto-safe", see manpage.)
  #audio-channels=auto

  # Sets the default volume level of videos
  volume=130

  ##################
  # other settings #
  ##################

  # Pretend to be a web browser. Might fix playback with some streaming sites,
  # but also will break with shoutcast streams.
  #user-agent="Mozilla/5.0"

  # cache settings
  #
  # Use a large seekable RAM cache even for local input.
  #cache=yes
  #
  # Use extra large RAM cache (needs cache=yes to make it useful).
  #demuxer-max-bytes=500M
  #demuxer-max-back-bytes=100M
  #
  # Disable the behavior that the player will pause if the cache goes below a
  # certain fill size.
  #cache-pause=no
  #
  # Store cache payload on the hard disk instead of in RAM. (This may negatively
  # impact performance unless used for slow input such as network.)
  #cache-dir=~/.cache/
  #cache-on-disk=yes

  # Display English subtitles if available.
  #slang=en

  # Play Finnish audio if available, fall back to English otherwise.
  #alang=fi,en

  # Change subtitle encoding. For Arabic subtitles use 'cp1256'.
  # If the file seems to be valid UTF-8, prefer UTF-8.
  # (You can add '+' in front of the codepage to force it.)
  #sub-codepage=cp1256

  # You can also include other configuration files.
  #include=/path/to/the/file/you/want/to/include

  ############
  # Profiles #
  ############

  # The options declared as part of profiles override global default settings,
  # but only take effect when the profile is active.

  # The following profile can be enabled on the command line with: --profile=eye-cancer

  #[eye-cancer]
  #sharpen=5

#+end_src

*** Node Package Manager Configuration

#+begin_src shell :tangle ~/.dotfiles/.npmrc

  prefix=~/.npm

#+end_src

*** Nix Package Repository

#+begin_src fundamental :tangle ~/.dotfiles/.nix-channels

  https://nixos.org/channels/nixpkgs-unstable nixpkgs

#+end_src

*** Polybar

#+begin_src conf :tangle ~/.dotfiles/.config/polybar/config

  ; Docs: https://github.com/polybar/polybar
  ;==========================================================

  [settings]
  screenchange-reload = true

  [global/wm]
  margin-top = 0
  margin-bottom = 0

  [colors]
  background = #f0232635
  background-alt = #576075
  foreground = #A6Accd
  foreground-alt = #555
  primary = #ffb52a
  secondary = #e60053
  alert = #bd2c40
  underline-1 = #c792ea

  [bar/panel]
  width = 100%
  height = 30
  offset-x = 0
  offset-y = 0
  fixed-center = true
  enable-ipc = true

  background = ${colors.background}
  foreground = ${colors.foreground}

  line-size = 2
  line-color = #f00

  border-size = 0
  border-color = #00000000

  padding-top = 15
  padding-left = 0
  padding-right = 1

  module-margin = 1
  font-0 = "Cantarell:size=13:weight=bold;1"
  font-1 = "Font Awesome:size=14;2"
  font-2 = "Material Icons:size=14;5"
  font-3 = "Fira Mono:size=12;-3"
  font-4 = "Weather Icons:size=16;3"
  font-5 = "DejaVu Sans"

  modules-left = exwm-workspace xkeyboard cpu memory
  modules-right = temperature battery backlight date

  tray-position = center
  tray-padding = 2
  tray-maxsize = 28
  ; tray-background = #ffffff

  cursor-click = pointer
  cursor-scroll = ns-resize


  [module/exwm-workspace]
  type = custom/ipc
  hook-0 = emacsclient -e "(pg/exwm-workspace-current-index)" | sed -e 's/^"//' -e 's/"$//'
  initial = 1
  ; format-underline = ${colors.underline-1}
  format-padding = 1

  [module/xkeyboard]
  type = internal/xkeyboard
  ; blacklist-0 = num lock
  format = |  <label-layout>
  format-prefix-font = 1
  format-prefix-foreground = ${colors.foreground-alt}
  label-layout = %icon% %name%
  label-indicator-padding = 2
  label-indicator-margin = 1

  [module/memory]
  type = internal/memory
  interval = 1
  warn-percentage = 95
  format = |  <label> RAM <bar-used>
  label = %gb_used% / %gb_total%
  bar-used-indicator =
  bar-used-width = 10
  bar-used-foreground-0 = #55aa55
  bar-used-foreground-1 = #557755
  bar-used-foreground-2 = #f5a70a
  bar-used-foreground-3 = #ff5555
  bar-used-fill = ▐
  bar-used-empty = ▐
  bar-used-empty-foreground = #444444

  [module/cpu]
  type = internal/cpu
  interval = 2
  format = | <label> CPU <ramp-coreload>
  ; format-underline = ${colors.underline-1}
  ; click-left = emacsclient -e "(proced)"
  label =  %percentage%%
  ramp-coreload-spacing = 0
  ; ramp-load-0-foreground = ${colors.foreground-alt}
  ramp-coreload-0 = ▁
  ramp-coreload-1 = ▂
  ramp-coreload-2 = ▃
  ramp-coreload-3 = ▄
  ramp-coreload-4 = ▅
  ramp-coreload-5 = ▆
  ramp-coreload-6 = ▇
  ramp-coreload-7 = █

  [module/temperature]
  type = internal/temperature
  thermal-zone = 0
  interval = 0.5
  warn-temperature = 60
  format = <ramp> <label> |
  ;format-underline = ${colors.underline-1}
  format-warn = <ramp> <label-warn>
  ;format-warn-underline = ${self.format-underline}
  label = %temperature-c%
  label-warn = %temperature-c%!
  label-warn-foreground = ${colors.secondary}
  ramp-0 = 
  ramp-1 = 
  ramp-2 = 
  ramp-3 = 
  ramp-4 = 

  [module/battery]
  type = internal/battery
  battery = BAT0
  adapter = ADP1
  full-at = 100
  time-format = %-l:%M
  label-charging = %percentage%% / %time%
  format-charging = <animation-charging> <label-charging>
  ;format-charging-underline = ${colors.underline-1}
  label-discharging = %percentage%% / %time%
  format-discharging = <ramp-capacity> <label-discharging>
  ;format-discharging-underline = ${self.format-charging-underline}
  format-full = <ramp-capacity> <label-full>
  ;format-full-underline = ${self.format-charging-underline}
  ramp-capacity-0 = 
  ramp-capacity-1 = 
  ramp-capacity-2 = 
  ramp-capacity-3 = 
  ramp-capacity-4 = 
  animation-charging-0 = 
  animation-charging-1 = 
  animation-charging-2 = 
  animation-charging-3 = 
  animation-charging-4 = 
  animation-charging-framerate = 750

  [module/backlight]
  type = internal/backlight
  card = acpi_video0
  use-actual-brightness = true
  format = | <ramp>  <label> |
  label = %percentage%%
  ramp-0 = %{T5}%{T-}
  ramp-1 = %{T5}%{T-}
  ramp-2 = %{T5}%{T-}
  ramp-3 = %{T5}%{T-}
  ramp-4 = %{T5}%{T-}

  [module/date]
  type = internal/date
  interval = 1.0
  date = "%F %a %b %d"
  time = %I:%M:%S %p
  format = <label>
  ;format-prefix-foreground = ${colors.foreground-alt}
  ;format-underline = ${colors.underline-1}
  label =  %date% |  %time%

#+end_src

*** Python

#+begin_src python :tangle ~/.dotfiles/.config/python/history.py

  # Enable custom ~/.python_history location on Python interactive console
  # Set PYTHONSTARTUP to this file on ~/.profile or similar for this to work
  # Currently sets history to ~/.cache/.python_history

  import atexit
  import os
  import readline
  import time


  def write_history(path):
      import os
      import readline
      try:
          os.makedirs(os.path.dirname(path), mode=0o700, exist_ok=True)
          readline.write_history_file(path)
      except OSError:
          pass


  history = os.path.join(os.environ.get('XDG_CACHE_HOME') or
                         os.path.expanduser('~/.cache'),
                         '.python_history')
  try:
      readline.read_history_file(history)
  except FileNotFoundError:
      pass

  # Prevents creation of default history if custom is empty
  if readline.get_current_history_length() == 0:
      readline.add_history(f'# History created at {time.asctime()}')

  atexit.register(write_history, history)
  del (atexit, os, readline, time, history, write_history)

#+end_src

*** Terminal Text Editors

**** Nano

#+begin_src conf :tangle ~/.dotfiles/.config/nano/nanorc

  # Include all the syntax highlighting modules.
  include /run/current-system/profile/share/nano/*.nanorc

#+end_src

**** Vim

#+begin_src haskell :tangle ~/.dotfiles/.vimrc

  " Encoding
  set encoding=utf-8

  " Syntax
  syntax on

  " Line numbers
  set number
  set relativenumber
  set ruler
  set laststatus=2

  " Search features
  set hlsearch
  set showmatch
  set incsearch
  set ignorecase
  set smartcase

  " Mode
  set showmode

  " Commands
  set showcmd
  set wildmenu
  set wildmode=list:longest

  " Indentation
  set tabstop=4
  set softtabstop=4
  set shiftwidth=4
  set textwidth=80
  set expandtab
  set smartindent

  " Delimiter matching
  set showmatch

  " Key Mappings
  nnoremap j gj
  nnoremap k gk

  " Color theme
  set background=dark
  colorscheme slate

  " Miscellaneous
  set viminfofile=~/.cache/vim/viminfo
  set backupdir=~/.cache/vim
  set dir=~/.cache/vim

#+end_src

*** Termux

**** Termux Properties

#+begin_src conf :tangle ~/.dotfiles/.termux/termux.properties

  ### After making changes and saving you need to run `termux-reload-settings`
  ### to update the terminal.  All information here can also be found on the
  ### wiki: https://wiki.termux.com/wiki/Terminal_Settings

  ###############
  # General
  ###############

  ### Allow external applications to execute arbitrary commands within Termux.
  ### This potentially could be a security issue, so option is disabled by
  ### default. Uncomment to enable.
  # allow-external-apps = true

  ### Default working directory that will be used when launching the app.
  default-working-directory = /data/data/com.termux/files/home

  ### Uncomment to disable toasts shown on terminal session change.
  # disable-terminal-session-change-toast = true

  ### Uncomment to not show soft keyboard on application start.
  # hide-soft-keyboard-on-startup = true

  ### Uncomment to let keyboard toggle button to enable or disable software
  ### keyboard instead of showing/hiding it.
  # soft-keyboard-toggle-behaviour = enable/disable

  ### Adjust terminal scrollback buffer. Max is 50000. May have negative
  ### impact on performance.
  # terminal-transcript-rows = 2000

  ### Uncomment to use volume keys for adjusting volume and not for the
  ### extra keys functionality.
  # volume-keys = volume

  ###############
  # Fullscreen mode
  ###############

  ### Uncomment to let Termux start in full screen mode.
  fullscreen = true

  ### Uncomment to attempt workaround layout issues when running in full screen
  ### mode.
  # use-fullscreen-workaround = true

  ###############
  # Cursor
  ###############

  ### Cursor blink rate. Values 0, 100 - 2000.
  terminal-cursor-blink-rate = 5

  ### Cursor style: block, bar, underline.
  # terminal-cursor-style = bar

  ###############
  # Extra keys
  ###############

  ### Settings for choosing which set of symbols to use for illustrating keys.
  ### Choose between default, arrows-only, arrows-all, all and none
  # extra-keys-style = default

  ### Force capitalize all text in extra keys row button labels.
  # extra-keys-text-all-caps = true

  ### Default extra-key configuration
  # extra-keys = [[ESC, TAB, CTRL, ALT, {key: '-', popup: '|'}, DOWN, UP]]

  ### Two rows with more keys
  # extra-keys = [['ESC','/','-','HOME','UP','END','PGUP'], \
  #               ['TAB','CTRL','ALT','LEFT','DOWN','RIGHT','PGDN']]
  extra-keys = [['ESC','CTRL','/','UP','-'], \
                ['TAB','ALT','LEFT','DOWN','RIGHT']]

  ### Configuration with additional popup keys (swipe up from an extra key)
  # extra-keys = [[ \
  #   {key: ESC, popup: {macro: "CTRL f d", display: "tmux exit"}}, \
  #   {key: CTRL, popup: {macro: "CTRL f BKSP", display: "tmux ←"}}, \
  #   {key: ALT, popup: {macro: "CTRL f TAB", display: "tmux →"}}, \
  #   {key: TAB, popup: {macro: "ALT a", display: A-a}}, \
  #   {key: LEFT, popup: HOME}, \
  #   {key: DOWN, popup: PGDN}, \
  #   {key: UP, popup: PGUP}, \
  #   {key: RIGHT, popup: END}, \
  #   {macro: "ALT j", display: A-j, popup: {macro: "ALT g", display: A-g}}, \
  #   {key: KEYBOARD, popup: {macro: "CTRL d", display: exit}} \
  # ]]

  ###############
  # Colors/themes
  ###############

  ### Force black colors for drawer and dialogs
  # use-black-ui = true

  ###############
  # HW keyboard shortcuts
  ###############

  ### Disable hardware keyboard shortcuts.
  # disable-hardware-keyboard-shortcuts = true

  ### Open a new terminal with ctrl + t (volume down + t)
  # shortcut.create-session = ctrl + t

  ### Go one session down with (for example) ctrl + 2
  # shortcut.next-session = ctrl + 2

  ### Go one session up with (for example) ctrl + 1
  # shortcut.previous-session = ctrl + 1

  ### Rename a session with (for example) ctrl + n
  # shortcut.rename-session = ctrl + n

  ###############
  # Bell key
  ###############

  ### Vibrate device (default).
  # bell-character = vibrate

  ### Beep with a sound.
  # bell-character = beep

  ### Ignore bell character.
  bell-character = ignore

  ###############
  # Back key
  ###############

  ### Send the Escape key.
  # back-key=escape

  ### Hide keyboard or leave app (default).
  # back-key=back

  ###############
  # Keyboard issue workarounds
  ###############

  ### Letters might not appear until enter is pressed on Samsung devices
  # enforce-char-based-input = true

  ### ctrl+space (for marking text in emacs) does not work on some devices
  # ctrl-space-workaround = true

#+end_src

*** X Defaults

Xsession default values

#+begin_src conf :tangle ~/.dotfiles/.Xdefaults

  XTerm*utf8: always
  XTerm*metaSendsEscape: true

#+end_src

*** Xmodmap

#+begin_src conf :tangle ~/.dotfiles/.xmodmaprc

  clear lock
  clear control
  keycode 66 = Control_L
  add control = Control_L
  keycode 105 = Multi_key

#+end_src

*** X Session

Acting with respect to window manager selected

#+begin_src sh :tangle ~/.dotfiles/.xsession

  DEFAULT_SESSION=exwm

  case $1 in
      *exwm)
          # Running in EXWM
          export EXWM=1

          # Ensure that font folders are loaded correctly
          xset +fp $(dirname $(readlink -f ~/.guix-extra-profiles/themes-fonts/themes-fonts/share/fonts/truetype/fonts.dir))

          # Set screen behaviours
          xset dpms 3600 3600 3600
          xset s off

          # Make Java applications aware this is a non-reparenting window manager.
          export _JAVA_AWT_WM_NONREPARENTING=1

          # For debugging
          # xterm

          exec $1
          ;;
      startxfce4)
          exec $1
          ;;
      *)
          exec $DEFAULT_SESSION
          ;;
  esac

#+end_src

*** X Settingsd

The ~xsettingsd~ configuration file. Below is the table for each property:

| Name                          | Type    | Description                    | Values                                     |
|-------------------------------+---------+--------------------------------+--------------------------------------------|
| Gtk/CursorThemeName           | string  | Cursor theme                   | Subdirs of =/usr/share/icons=                |
| Net/EnableEventSounds         | integer | Play event sounds              | 0 (no), 1 (yes)                            |
| Net/EnableInputFeedbackSounds | integer | Event sounds response to input | 0 (no), 1 (yes)                            |
| Net/IconThemeName             | string  | Icon theme                     | Subdirs of =/usr/share/icons=                |
| Net/SoundThemeName            | string  | Sound theme                    |                                            |
| Net/ThemeName                 | string  | Widget theme                   | Subdirs of =/usr/share/themes=               |
| Xft/Antialias                 | integer | Text antialiasing              | 0 (no), 1 (yes), -1 (default)              |
| Xft/DPI                       | integer | Display DPI                    | 1024*dots/inch, -1 (default)               |
| Xft/HintStyle                 | string  | Text hinting style             | hintnone, hintslight, hintmedium, hintfull |
| Xft/Hinting                   | integer | Text hinting                   | 0 (no), 1 (yes), -1 (default)              |
| Xft/RGBA                      | string  | Text subpixel rendering        | none, rgb, bgr, vrgb, vbgr                 |

#+begin_src conf :tangle ~/.dotfiles/.config/xsettingsd/xsettingsd.conf

  Gtk/DecorationLayout "menu:minimize,maximize,close"
  Gtk/FontName "Cantarell 12"
  Gtk/MonospaceFontName "Fira Mono 12"
  Gtk/CursorThemeName "Adwaita"
  Net/IconThemeName "Papirus-Dark"
  Net/ThemeName "Matcha-dark-azul"
  Xft/Antialias 1
  Xft/Hinting 0
  Xft/HintStyle "hintnone"
        
#+end_src

* Scripts

** Archive Extractor

This script extract most known archive formats:

#+begin_src sh

  extract foo.zip

#+end_src

#+begin_src sh :tangle ~/.dotfiles/bin/extract :shebang #!/usr/bin/env bash

  for archive in "$@"; do
      if [ -f "$archive" ]; then
          case "$archive" in
              *.tar.bz2) tar xvjf "$archive" ;;
              *.tar.gz)  tar xvzf "$archive" ;;
              *.tar.xz)  tar xvzf "$archive" ;;
              *.bz2)     bunzip2 "$archive" ;;
              *.gz)      gunzip "$archive" ;;
              *.tar)     tar xvf "$archive" ;;
              *.tbz2)    tar xvjf "$archive" ;;
              *.tgz)     tar xvzf "$archive" ;;
              *.zip)     unzip "$archive" ;;
              *.Z)       uncompress "$archive" ;;
              *.7z)      7z x "$archive" ;;
              *.rar)     unrar x "$archive" ;;
              *)         echo "Can't extract '$archive'" ;;
          esac
      else
          echo "'$archive' is not a valid file!"
      fi
  done

  exit 0

#+end_src

** Arduino Flatpak Executable

The script sets up correctly arduino IDE when installed from flatpak

#+begin_src sh

  arduino-flat

#+end_src

#+begin_src sh :tangle ~/.dotfiles/bin/arduino-flat :shebang #!/usr/bin/env bash

  flatpak run --branch=stable --arch=x86_64 cc.arduino.arduinoide "$@"

#+end_src

** Boot Fix

This is not a script though just a set of commands I need to run when Guix fails to boot properly

#+begin_src sh :tangle ~/.dotfiles/bin/bfix

  # Run ls (hd0) or (hd1) and select the appropriate partitions until /boot/grub/ is found
  # Then apply the following (Below is the appropriate values for this machine)

  set prefix=(hd1,3)/boot/grub/
  set root=(hd1,3)
  insmod linux
  insmod normal
  normal

  # It should boot normally afterwards
  # Run update-system to have it boot normally

#+end_src

** Charge Thresholds

These scripts adjust the charge threshold for a System76 laptop:

#+begin_src sh

  safe-charge

#+end_src

*Max Charge*

#+begin_src sh :tangle ~/.dotfiles/bin/max-charge :shebang #!/usr/bin/env bash

  echo 0 > /sys/class/power_supply/BAT0/charge_control_start_threshold
  echo 100 > /sys/class/power_supply/BAT0/charge_control_end_threshold
  echo "Max Charge Enabled - 100%"

  exit 0

#+end_src

*Normal Charge*

#+begin_src sh :tangle ~/.dotfiles/bin/normal-charge :shebang #!/usr/bin/env bash

  echo 60 > /sys/class/power_supply/BAT0/charge_control_start_threshold
  echo 81 > /sys/class/power_supply/BAT0/charge_control_end_threshold
  echo "Normal Charge Enabled - 80%"

  exit 0

#+end_src

*Safe charge*

#+begin_src sh :tangle ~/.dotfiles/bin/safe-charge :shebang #!/usr/bin/env bash

  echo 50 > /sys/class/power_supply/BAT0/charge_control_start_threshold
  echo 61 > /sys/class/power_supply/BAT0/charge_control_end_threshold
  echo "Safe Charge Enabled - 60%"

  exit 0

#+end_src

** Mail Setup

This script sets up email accounts using ~mu~:

#+begin_src sh

  mail-init

#+end_src

#+begin_src sh :tangle ~/.dotfiles/bin/mail-init :shebang #!/usr/bin/env bash

  mu init -m ~/Mail --my-address=pgabriel999@hotmail.com --my-address=philippe.gabriel.1@umontreal.ca
  mu index

  exit 0

#+end_src

** Music Download

This script helps download music from youtube:

#+begin_src sh

  download-music 

#+end_src

#+begin_src sh :tangle ~/.dotfiles/bin/download-music :shebang #!/usr/bin/env bash

  for music in $*; do
      youtube-dl -x --audio-format "mp3" -o '~/Music/%(title)s.%(ext)s' $music
  done

  exit 0

#+end_src

** Password Sync

This script is used with mcron to schedule password synching

#+begin_src sh :tangle ~/.dotfiles/bin/sync-passwords :shebang #!/usr/bin/env bash

  pass git pull
  pass git push

  notify-send -i "emblem-synchronizing" "Passwords synced!"

  exit 0

#+end_src

*Scheduling with mcron*

#+begin_src scheme :tangle ~/.dotfiles/.config/cron/pass-sync.guile

  (job
   '(next-hour (range 0 24 4))
   "~/bin/sync-passwords")

#+end_src

** Pretty Print

This script pretty prints colon delimited variables such as ~$PATH~:

#+begin_src sh

  echoFormat $PATH

#+end_src

#+begin_src sh :tangle ~/.dotfiles/bin/echoFormat :shebang #!/usr/bin/env bash

  echo $1 | sed 's/:/\n/g'

  exit 0

#+end_src

** Screenshot to Clipboard

This script helps save a screenshot to clipboard:

#+begin_src sh

  scrot-clipboard

#+end_src

#+begin_src sh :tangle ~/.dotfiles/bin/scrot-clipboard :shebang #!/usr/bin/env bash

  scrot -s -e 'xclip -selection clipboard -t image/png -i $f && rm -f $f'

  exit 0

#+end_src

** TA Script

This is a script I tend to use when correcting student assignments to speed up my workflow:

#+begin_src sh

  collect-assignments --extract 3

#+end_src

#+begin_src sh :tangle ~/.dotfiles/bin/collect-assignments :shebang #!/usr/bin/env bash

  if [ $# -lt 1 ]
  then
      echo "Usage: collect-assignments option [toskip]"
      echo 
      echo "Available options:"
      echo "    --extract   Unzips zip archives files starting at current directory."
      echo "    --open      Opens file using appropriate program."
      echo "    --collect   Collects corrections into a corr directory."
      echo

      exit 1
  fi

  count=0
  OPTION=$1
  TOSKIP=${2:-0}

  function apply {
      for f in ./"$1"/*; do
          if [ -d "$f" ]; then
              apply "$f"
          elif [ -f "$f" ]; then
              case "$OPTION" in
                  --extract)
                      ABS=$(realpath "$f")
                      DIR=$(dirname "$ABS")
                      case "$f" in
                          *.zip) unzip "$f" -d "$DIR";;
                          *.rar) unrar x "$f" "$DIR" ;;
                          *) ;;
                      esac
                      ;;
                  --open)
                      case "$f" in
                          *.pdf) xournalpp "$f";;
                          *.docx) libreoffice "$f";;
                          *.lmc) emacsclient "$f";;
                          *.hs) emacsclient "$f";;
                          *.pl) emacsclient "$f";;
                          *.sh) emacsclient "$f";;
                          *.txt) emacsclient "$f";;
                          *.py) emacsclient "$f";;
                          *) ;;
                      esac
                      ;;
                  --collect)
                      case "$f" in
                          corr-*) mv "$f" ../*-corr/;;
                          *) ;; # echo "$f"
                      esac
                      ;;
                  *)
                      echo "Unknown option"
                      exit 1
                      ;;
              esac
          fi
      done
  }

  for d in *; do
      if [ -d "$d" ]; then
          echo "---------------------"
          ls "$d"
          echo "------------------"
          if [ $count -ge $TOSKIP ]; then
              echo "Working on $count"
              sleep 2
              apply "$d"
          fi
          ((count++))
          echo
      fi
  done

  exit 0

#+end_src

** Wacom Tablet Scripts

These are scripts to help quickly configure the screen onto which is mapped the wacom stylus when dealing with multiple screens:

#+begin_src sh

  wacom-laptop

#+end_src

#+begin_src sh :tangle ~/.dotfiles/bin/wacom-laptop :shebang #!/usr/bin/env bash

  xinput map-to-output "Wacom Intuos PT S Pen Pen (0)" eDP-1
  xinput map-to-output "Wacom Intuos PT S Pen Eraser (0)" eDP-1

  echo "Mapped to laptop!"

  exit 0

#+end_src

#+begin_src sh :tangle ~/.dotfiles/bin/wacom-screen :shebang #!/usr/bin/env bash

  xinput map-to-output "Wacom Intuos PT S Pen Pen (0)" HDMI-1
  xinput map-to-output "Wacom Intuos PT S Pen Eraser (0)" HDMI-1

  echo "Mapped to HDMI!"

  exit 0

#+end_src

* Miscellaneous

** Bluetooth Setup

If need to manually connect to Bluetooth audio devices using ~bluetoothctl~, enter these commands at the ~bluetoothctl~ prompt:

#+begin_src shell

  system-alias "my-hostname" # To configure your laptop's device name, ex: s76-laptop
  default-agent
  power on
  scan on
  # Wait for your device to appear
  pair 04:52:C7:5E:5C:A8
  trust 04:52:C7:5E:5C:A8 # To enable auto-connect
  connect 04:52:C7:5E:5C:A8

#+end_src

** Flatpak Package Manager

Applications to install which are otherwise difficult to install Guix systems.
    
#+begin_src shell

  flatpak remote-add --user --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
  flatpak remote-add --user --if-not-exists flathub-beta https://flathub.org/beta-repo/flathub-beta.flatpakrepo
  flatpak install --user flathub com.spotify.Client
  flatpak install --user flathub com.valvesoftware.Steam
  flatpak install --user flathub com.microsoft.Teams
  flatpak install --user flathub com.discordapp.Discord
  flatpak install --user flathub-beta com.obsproject.Studio

#+end_src

** Nix Package Manager

The channel needs to be updated before any packages can be installed:

#+begin_src shell

  nix-channel --update

#+end_src

Installing packages:

#+begin_src shell

  nix-env -i nodejs dotnet-sdk gh hledger
  nix-env -iA nixpkgs.nodejs-12_x # For a specific version

#+end_src
