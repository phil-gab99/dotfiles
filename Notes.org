#+title: Notes
#+author: Philippe Gabriel
#+property: header-args    :tangle-mode (identity #o444)
#+property: header-args:sh :tangle-mode (identity #o555)

* Notes

** Bluetooth Setup

If need to manually connect to Bluetooth audio devices using ~bluetoothctl~, enter these commands at the ~bluetoothctl~ prompt:

#+begin_src shell

  system-alias "my-hostname" # To configure your laptop's device name, ex: s76-laptop
  default-agent
  power on
  scan on
  # Wait for your device to appear
  pair 04:52:C7:5E:5C:A8
  trust 04:52:C7:5E:5C:A8 # To enable auto-connect
  connect 04:52:C7:5E:5C:A8

#+end_src

** Flatpak Package Manager

Applications to install which are otherwise difficult to install Guix systems.
    
#+begin_src shell

  flatpak remote-add --user --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
  flatpak remote-add --user --if-not-exists flathub-beta https://flathub.org/beta-repo/flathub-beta.flatpakrepo
  flatpak install --user flathub com.spotify.Client
  flatpak install --user flathub com.valvesoftware.Steam
  flatpak install --user flathub com.microsoft.Teams
  flatpak install --user flathub com.discordapp.Discord
  flatpak install --user flathub-beta com.obsproject.Studio

#+end_src

** Nix Package Manager

The channel needs to be updated before any packages can be installed:

#+begin_src shell

  nix-channel --update

#+end_src

Installing packages:

#+begin_src shell

  nix-env -i nodejs dotnet-sdk gh hledger
  nix-env -iA nixpkgs.nodejs-12_x # For a specific version

#+end_src

** Guix

*** Build environments

Typical build environments with ~guix shell~

#+begin_src sh

  $ guix shell -CNWD $PACKAGE --no-grafts nss-certs
  # -C - Isolated container
  # -N - Share host network namespace
  # -W - Provide guix inside container
  # -D - Include dependencies of $PACKAGE in environment but not $PACKAGE itself
  # --no-grafts - Do not put security grafts onto package and deps, to speed up build
  # --no-substitutes - Do not use binary substitutes from configured substitute servers

  # Drops us in container
  [env]$ guix build <package> --no-substitutes

  # Install package to test it
  [env]$ guix package -i /gnu/store/...-<package>-<version>

#+end_src
