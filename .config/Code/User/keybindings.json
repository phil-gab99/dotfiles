[
  // Minibuffer
  {
    "key": "alt+x",
    "command": "workbench.action.showCommands"
  },
  
  // Tab switch
  {
    "key": "ctrl+tab",
    "command": "workbench.action.nextEditorInGroup"
  },
  {
    "key": "ctrl+shift+tab",
    "command": "workbench.action.previousEditorInGroup"
  },

  // File actions
  {
    "key": "ctrl+x ctrl+s",
    "command": "workbench.action.files.save"
  },
  {
    "key": "ctrl+x ctrl+n",
    "command": "openEditors.newUntitledFile"
  },
  {
    "key": "ctrl+x ctrl+f",
    "command": "workbench.action.files.openFile"
  },
  {
    "key": "ctrl+x ctrl+d",
    "command": "workbench.action.files.openFolder"
  },

  // Editor Settings
  {
    "key": "ctrl+x ctrl+c",
    "command": "workbench.action.closeWindow"
  },

  // Buffer switching
  {
    "key": "ctrl+x 0",
    "command": "workbench.action.joinTwoGroups"
  },
  {
    "key": "ctrl+x 1",
    "command": "workbench.action.joinAllGroups"
  },
  {
    "key": "ctrl+x 2",
    "command": "workbench.action.splitEditorOrthogonal"
  },
  {
    "key": "ctrl+x 3",
    "command": "workbench.action.splitEditor"
  },
  {
    "key": "ctrl+x o",
    "command": "workbench.action.navigateEditorGroups"
  },
  {
    "key": "ctrl+x k",
    "command": "workbench.action.closeActiveEditor"
  },

  // C-g quits all
  {
    "key": "ctrl+g",
    "command": "-workbench.action.gotoLine"
  },
  {
    "key": "ctrl+g",
    "command": "closeReferenceSearch",
    "when": "inReferenceSearchEditor && !config.editor.stablePeek"
  },
  {
    "key": "ctrl+g",
    "command": "editor.closeTestPeek",
    "when": "testing.isInPeek && !config.editor.stablePeek || testing.isPeekVisible && !config.editor.stablePeek"
  },
  {
    "key": "ctrl+g",
    "command": "cancelSelection",
    "when": "editorHasSelection && textInputFocus"
  },
  {
    "key": "ctrl+g",
    "command": "removeSecondaryCursors",
    "when": "editorHasMultipleSelections && textInputFocus"
  },
  {
    "key": "ctrl+g",
    "command": "closeFindWidget",
    "when": "editorFocus && findWidgetVisible && !isComposing"
  },
  {
    "key": "ctrl+g",
    "command": "editor.cancelOperation",
    "when": "cancellableOperation"
  },
  {
    "key": "ctrl+g",
    "command": "search.action.cancel",
    "when": "listFocus && searchViewletVisible && !inputFocus && searchState != '0'"
  },
  {
    "key": "ctrl+g",
    "command": "extension.vim_escape",
    "when": "editorTextFocus && vim.active && !inDebugRepl"
  },

  // Special functionality for VIM extension
  {
    "key": "ctrl+w",
    "command": "-workbench.action.closeActiveEditor"
  },
  {
    "key": "ctrl+k",
    "command": "selectPrevSuggestion",
    "when": "suggestWidgetMultipleSuggestions"
  },

  // C-SPACE leader comb
  {
    "key": "ctrl+space p v",
    "command": "workbench.action.terminal.new",
    "when": "terminalProcessSupported || terminalWebExtensionContributedProfile"
  },

  // Swiper
  {
    "key": "ctrl+s",
    "command": "actions.find",
    "when": "editorFocus || editorIsOpen"
  },

  // Commenting
  {
    "key": "alt+/",
    "command": "editor.action.commentLine",
    "when": "editorTextFocus && !editorReadonly"
  },

  // Clipboard
  {
    "key": "alt+w",
    "command": "editor.action.clipboardCopyAction"
  },

  // Org style bindings
  {
    "key": "ctrl+c ctrl+c",
    "command": "notebook.cell.executeAndSelectBelow",
    "when": "notebookCellListFocused && notebookMissingKernelExtension && !notebookCellExecuting || notebookCellListFocused && !notebookCellExecuting && notebookKernelCount > 0 || notebookCellListFocused && !notebookCellExecuting && notebookKernelSourceCount > 0"
  },
  {
    "key": "ctrl+c ctrl+a",
    "command": "notebook.cell.insertCodeCellBelow",
    "when": "notebookCellListFocused"
  },
  {
    "key": "ctrl+c ctrl+d",
    "command": "notebook.cell.delete",
    "when": "notebookEditorFocused"
  }
]
